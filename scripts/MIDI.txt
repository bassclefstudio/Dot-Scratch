//----- Variables -----------------------------------------------------------------------------------------------------

base64 = 0123456789abcdefghijklmnopqrstuvwxyz!"£$%^&*()-=[];'#,./_+{}:@~<
beats = 0
byte array = 
chunk size = 10794
clone? = false
clone type = playback
command = 32
data = 
delta time = 0
dictionary size = 2661
dirty? = false
draw cache = -1
error.c1 = 1
event type = message
event type value = 0
format type = 1
hex = 01
hex dump = 
hex output = 0106Ondine^"01000}011g0g000}011d0g000}011e0x0:0}01190g0:0}011b0x000}011h0x0:0}011j0x0:0}011h0g000}01190x000}01150x0:0}011i0x000}011b0x000}011i0x0:0}01140g0:0}01120x0:0}011f0x0:0}01140x000}01180g000}011b0g000}01180x0:0}011i0g0:0}01190x000}01140x0:0}011g0x0:0}011c0x0:0}011k0x000}011g0x0:0}011d0g0:0}00170x000}011h0g0:0}011c0g0%0}01110g0:0}011a0g0:0}011d0x000}011f0x000}011n0x000$010<0g0%0$01160g0k0}010<0g0k0$01120g000}001b0x000}01190g000}011c0x0%0$01110g0k0}010@0g0k0$01160g0%0}010{0g0:0}001d0x0:0}010@0g000}011j0x0:0}011h0x000_01160x000_010<0]0:0_01150]0:0}011o0x000}01160x0:1f010+0]0:0}010,0g000}010+0g0:0}010_0g000}01110g000}01140g0:0}01110g000}01150g0:3=01160]000}011d0x000}011s0x000_011f0g0%0$011h0x000}011r0x0:0}01150]0k0}011h0]0:0}011h0]000}011h0]0:0}001b0x0:3=01190]0:0}01100x0:0_011b0g0:0_01140g000_01160g000_01190g000_011d0g000_011f0x0:0_011b0x000_011f0]000_011b0]0:0}010_0x000_01140x000$011b0g0t0}011h0x0:0_011b0]000_01130]0:0}01180x0:0}010<0x0%1f01130]0$0_011t0]0:0}000~0x0:0_011j0x0:3=01140]0:0_01140x000_01190x000_011d0x0:0_01140]000_01190]000_011d0]0:1_010+0]000}010<0x0:0}010{0x0%0$011l0x0%0$011p0x0:0}011c0]000}001o10000}001i1i000}001f1q003[011b0g0:0}010]0g0:3=01140o0:bf01190]0:3=011l0]0:0}01170x000_01160]0:0}010{0"000}01120x0:0}010:0x000}01100x0:0}010#0x0:0}01130x0:0}010/0x0:0}011s0x0u0t011e0x0u0t011l0x0u0t011o0x0u0t011q0x0u0t011u0x003=011k0]0:0}01100]0:0}011d0]0:0}001p0*0:0}01121g000}010~1g0:1/010;1g0:1/010.1g000}01121g0:0}010~1g0"0!010/0g0"0!010[0g0"0!010*0g0:0}001p0x0:0}001j0x000}001n0x000}001a0x0:0}011g0g000}011l0g000}011p0g000}011i0g000}011a0g0:0}011a0z0:7v011d0]000}011k0x0:1/011b0x001/011h0x003=011g0]00bf011i0]0:3=010@0]007v01160]0:0}010]0x003=01120]003=010<0]000}010{0x000}01130x0%0$011j0x0:0_011g0x0"0!011i0x000}011c0]0k1f010@0]0%0}01190]0e1r011i0]0x0_011t0]0k1f010<0]0l1y011f0]000}001y0x003=010(0x003=010_0x007v010]0x007v010,0x000}001!0z0:0}001v0£000}001y0£0:0}001u0%000}001x0%000}001v0*003=010-0*003=010{0*0:0}001u0-000}001x0-0:0}001p0[000}001v0[0:0}001p0'000}001u0'0:0}001o0.000}001r0.007v010#0.007v010/0.0:0}001q0_000}001v0_0:0}001o0}000}001r0}0:0}001n0@000}001q0@0:0}001j100:0}001n13000}001q130:0}001j15000}001o150:0}001i18000}001n180:0}001f1b000}001j1b0:0}001i1d000}001n1d0:0}001f1g000}001j1g0:0}001e1i0:0}001c1l000}001f1l0:0}001e1o000}001i1o0:0}001c1q000_001e1t003=01101<003=010,0]0:1/010&1g0:0}010_1g0:0}01141g003=011b0g0:0}001c0x0:7v011b0o0:bf01170o0:3=01170o0:3=01190o0:7v01180o0:3=01160o000}011i0%0:0}011a0&000}011g0&0:0}011a0(000}011g0(0:0}011a0=0:0}011k0*0:0}011a0$000}011g0z000}011i0z0:0:011b0]0:0:011b0x0:7v011l0]0:3=011q0]0:0}011e0x0:1/011e0x0:3=011p0]001/011e0x000}01170x0:7v011b0]0v6<011n0]0:0}011t0x0:0}011p0x0:bf01170]0va=011j0]0:0}01150x0:0}01110x000}011t0x0v1p011g0]0t0}011p0x0:1.011g0x0:3=01170]0v3f011j0]0v3f011l0]0t0}01110x0:0}011e0q0:0}01140"0:0}01160£0:0}01140^003=011c0]0:0}01100!0:0}01100=0:0}01100+0y0x01140~003=01191e0:0_01140.004<011i0g004<011n0g0$0"010!0g0£0"010^0g0£0"010*0g0£0"010/0g0£0"010:0g0$0"01110g003=011i0]000_011f0@000}0116130:0:010+0]0:2#010+0]0y0x01100:0:0}010(0x0:3=01120]0:3=01100]0:3=010<0]0:1_01120]000001120x0:0:01120x0:3=01110]0:7v010<0]000}011o0x003=011e0]007v011i0]0:0}010'0x003=011b0]0:0}010&0x0:0}010@0x0:0}010_0!0:0}01100$000}010/0x000$011f0x000$011h0x0%3=011b0]000$011r0x0%0"011j0x0%0$011n0x0[0=011l0x000}01100*007v011m0]0:bf01160]0:3=01130]001_011f0]0:1/011f0x001q011i0]0u0t011c0x0u2l011i0x0u3=01180]000t011x0x0u0t011i0x0u0r011c0x0%0$011q0x0%0$011u0x0%0$011r0x0"0!011l0x0%0$011c0x0%0$011a0x0%0$01160x0%3=010#0]000}011p0]0:0}011l0]000}011o0]002#011h190:1/01160]0d1^01190]0k1f010~0]0%0}011a0]0%1f01170]0:1/01170]0l1y011j0]0%0}011f0]0:1/011b0]0:1/01150]0,0#010}1w0,0#01171w00bf010=0.00bf010}0.003z010]1l003z010@1l0:0_00191t0:1_001c1<000u010*1w007v010,1w007v010/1w007v010}1w0u0t00111t016^010*1s0t0t00131p0u0t00171l0u1/001c1h0u0t001f1d0u0t001j190u0t001o150u1_001m11003z010~110u0t001j0@0u0t001a0+0u0t001j0,0u0u001m0]0u1p001m0)0u0t001v0^0u0r001y0"0u0}001v0x000t010"0x0u0}001x0z000}001w0]003=01110]007v010_0]007v010:0]000}001y0;0:0}001q0#000}001v0#0:0}001p0.000}001w0.0:0}001o0_000}001s0_003=010/0_003=01130_0:0}001n0{000}001u0{0:0}001m0:000}001r0:0:0}001l0~000}001s0~0:0}001k10007v010:10007v0111100:0}001j12000}001p120:0}001i14000}001l140:0}001h16000}001m160:0}001g18000}001j180:0}001f1a000}001l1a0:0}001e1c000}001g1c0:0}001d1e000}001j1e0:0}001c1g000}001f1g0:0}001b1i0:0}001a1k000}001d1k0:0}00191m000}001g1m000}001c1o1g1f010(0]000$01161[0%0$011l1[0%0$011f1!0:1/010~1g000}011a1f0"0!010:0g0"0!010!0g00mv010}0x00ak010<0x00bf01120]0:1_000<0x0:0}00110x0:0:000<0x0:5%000<0x007v010_0x007v010:0x0:0}00100x003=01140]000p010(0x0qs4010(0x0:0}00170"000}001b0"0:0}001j0*000}001n0*3[3=01150x3[3=011a0x3[3=01190x0%0$011l1^000$011r1^000#011r1[000#011o1[0,0#011c1[000#011k1[000#011f1[000#011c1[0,0#01101[000#01181[000#01131[000#01101[0:3=011b0o0:0:01190o0:0:01190g0:1/01190g0:3=011g0o0:3=011d0o0:0_011i0g0:i=01180o0:3=01110o0:7v01110o0:0}011i0i0:0}011a0k000}011d0k000}011g0k0:0}011i0m0:0}011a0o000}011d0o000}011g0o0:0}011a0r000}011d0r000}011g0r0:0}011i0t0:3=01140-000}011a0v000}011d0v000}011g0v0:0}011i0z0:0}011a0£000}011d0£000}011g0£0:3=01160:000}011d0&000}011d0(0:0}011i0-0:i=011d19000}011a0]000}011g0]000}011i0]0:0}011k0]0:0}011k0[000}011g0=000}011i0=0:0}011k0=0:0}011a0-000}011g0-000}011i0-0:0}011a0)000}011g0)000}011i0)0:0}011k0)000}011i0(000}011i0&0:0}011k0^0:0}011a0^000}011g0^000}011i0^0:0}011a0%000}011g0%0:0}011k0$000}011g0$000}011i0$0:0}011k0£0:0}011k0"0:0}011a0"000}011g0"000}011i0"0:3=011d0.000}011k0!0:0_011k0y0:7v011e0]0:3=011h0]0:bf011n0]0:7v011n0]0:3=011n0]0:0:011j0]0:2'011j0x0:0_01190x000_011e0x000_011h0x0:0_011h0x003=011c0o0v3f011g0o0t0}01100h032=011n0p0+0}01120i0:0}01140j0:0}01160k003=011l0u0:0}01190l0:0}011c0n0:0}011e0o0:7v011g0"0:0}011c0r0:0}01190s0:0}01160u0:0}01140v0:0}01120w0:0}010@0y003=011i0'0:0}01120!0:0}011c0$003=011j0{0:0}01160%0:0_01120*0:e<010{0(002*01180(003e011c0(007w011g0(00ef011k0(0y0x010:0(0z0x01140)0y0x01100-0y0x01140-0y2@01180=0z3&011c0[0y0$010<19000$011b190%0$01100]0%0$01140[0%0%01180=0%2w01180-0%1g011c0)0%6=011g0(0%5%011c0*0%0%01180&0%3[01180^0%0$01140^0%0$01100%0%0$010:0$0%0$01100£0%0$01140"0%1701180!0%1g011c0z0000011c0z0%0%011g0y0000011g0y0%0}010_0x003=011n0]0:0}010{0y0:0}010@0z003=011l0/0:0}01190$0:0}011c0%0:7v011g0@0:0}011c0&0:0}01190(0:0}01160)0:0}01140-0:0}010@0[0:0}010{0]0:0}010_0;003=011i1b0:0}010{0'0:0}010@0#0:0}01100.0:0}01170/003=011j1i0:0}01140_0:0_010@0{0:e<010#0}002*01180}003e011c0}007w011g0}00ef011k0}0y0x010_0:0z0x010{0:0y0x01100@0y2@01180~0z3&011c0<0y0$010<1w000$011b1w0%0$0110100%0$01140<0%0%01180~0%2w01180@0%1g011c0:0%6=011g0}0%5%011c0}0%0%01180{0%3[01180+0%0$01140_0%0$01100/0%0$010:0.0%0$01100.0%0$01140,0%1701180#0%0$011c0'0%0"011g0;0%0_010]0]003=011b190v3f011g190t0_010.0]032=011n1b0+0_010_0;0:0_010{0'0:0_01100#003=011l1e0:0_01120,0:0_01160/0:77011c0_007v011g1k0[0(011e0+0[0(01190{0[0(01140}0[0(01120}0[0_01100:0:0_010{0@0:0_010_0~0:0_010.0<0:0(010]10003=01161w003=011i1w0[0(010.110[0(010_120[0(010{120[0(0110130[0(011414003=01171£003=011j1£0[0(0110150[0(010{150[0(010_160[0(010.170[0_010-18007v011k18003=011g18003=011s180:0_010#190:0_010_1a0:0_010:1b0:0_010:1c003=011c1c003=011o1c0:0_01101d0:0_01141e0:0_01181f0:0_011b1g003[01181g007v011c1g007v011k1g0:0_011g1c0:0_011b180:0_0116140:3=0118100:0_01140:0:0_01100_0:0_010:0#0:0"010<0[007v011g0[002v01190[002v011l0[0%0"010@0-0%0"010{0*0%0"010_0%0%0"010@0£002v011b0£002v011n0£0%0"010{0z0%0"010_0w0%0"010#0u0%0"010_0r002n011c0r002n011o0r0%0"010#0o0%0"010]0m0%0"010-0j0%0"010w0g004<011u0g0£0"010y0g0£0"010"0g0$0"010$0g0$0"010(0g0£0"010-0g0d4<011g0g004<011p0g004<011s0g0q0"010[0g0£0"010]0g0£0"010'0g0$0"010,0g0$0"010_0g0£0"010{0g0q3'01180g004=011b0g004=011f0g004=011k0g0d0"010@0g0£0"010<0g0£0"01130g0£0"01140g0$0"01160g0£0:01180g0$0z01190g0£0}01140g00mv010<0g00e<011i0o060,01160g060=01190g060^011d0g0&0_011b0g0:0_01130g000_01150g000_011c0g003=011h0o0:0_01190o000_011e0o0:0_01190w000_011e0w0:0_01130%000_01150%000_011c0%0:0_011c0]000_011h0]003=011k190:0_01160)000_01180)000_011f0)0:0_01160^000_01180^000_011f0^0:0_011c0"000_011h0"00mv010<0x060,01160x060=01190x060^011d0x0&0_011b0x0:0_01140!000_01160!000_01190!000_011d0!0:0_01140%000_01160%000_01190%000_011d0%0:0_011b0(000_011f0(0:0_01130[000_01150[000_011c0[003=011h180:0_01190#000_011e0#0:0_01190_000_011e0_0:0_01130:000_01150:000_011c0:0:0_011c10000_011i10003=011l1w0:0_01160@000_01190@0:0_01160+000_01190+000_011f0+0:0_011c0,000_011i0,0:0}01140]00mv010<0]00bf011i19060,01160]060=01190]060^011d0]0&0_011b0]003[011619007v011i190:0_01140'000_011d0'000_011d0.0:0_011b0_000_011f0_0:0_01140}002#01160}000_01190}000_011d0}0:0_011b0@0:0_011b10000_011f100:0_0114130:0_011915000_011f15003=011d15003=011i15003=011p150:0_011418000_0116180:0_01141a000_01161a0:0_01191d000_011f1d0:0&010:1g004<011d1g004i011e1g004<011i1g004<011p1g0-0&010<1f0)0&01121e0-0&01161c0-0&01181b0-0&011b190)0)011e180-0&011i16004<011n160-0&011k150)0&011i130-0&011e120-0&011b100-0&01180<0)0&01160@0-0&01120:004=01160:004=011b0:004=011e0:004=011i0:0-0&010<0{0)0&010:0+0-0&010{0/0-0&010.0.0-0&010'0#0)0&010[0'0-0_010<0]002#01130]00mv010^0]00000113190vl<010[0]000t011b190t0_01150]000:011b0]031,010+0]006v011f190+0_01150]001_011b0]001_01130]002#011b0]000:01130]001/01130]000{011b0]007v011f190:0:010+0;000_010<0;000_01130;0:1.010+0'000_010<0'000_01130'0:0_01150#000_011b0#0:0_01150.000_011b0.0:0_010+0/000_010<0/000_01130/0:0_010+0_000_010<0_000_01130_0:0_01150+000_011b0+0:0_01150}000_011b0}000_011e0}003=011h1o0:0_010+0:000_010<0:000_01120:0:0_010+0@000_010<0@000_01120@0:0_01150~000_011b0~000_011e0~0:0x010-10003e01181w003=011c1w003=011k1w0y0x010#100z0x010_100y0x010:0<0y0x01100<0z0x01180~0y0x011c0@007v011i1r0y0x01180@0z0x01140@0y0x010:0}0z0x010_0}0y0x010#0{0y0x010_0{0z0x010:0+0y0x01100+0y0x01140+0y0x01180_0z0x011c0_0y0x01180/003=011g1i0y0x01140/0z0x01100.0y0x01100.0y0x010:0,0y0x010_0,0z0v010#0,0y0}010=0#002#010@1e003=01151e0:0}010.0'0:0}010+0'0:0}010@0;0:bf01120]00000112190:0}010<0[0:0}010@0=0:0}010+0=0:0}010.0-0:0}010]0)0:0}010=0(0:0}010&0(0:0}010z0*0:0}010=0&0:0}010'0^0:0}010.0%0:1_010:0%003=01140:0:0}010<0$0:1*010:0£0:0}010.0!0:0}010'0z0:0_010[0y000}010}0x0:0}010'0v000}01100v0:g4010_0t000}010<0t0:f8010:0r000}010<0r0:0}011c0p0:0}01140n000}01180n000}011b0n0:0}01140l000}01180l000}011b0l0:0}011c0j0:7v01160]0:bf010<0]0:bf010@0]0:3=010}0]0:0_011c0x0:2#011c0]0:0_010(0x00bf010<0]00bf011b0]000001140x003=010@0]003=01190]003=01100]0:0_010]0x0:0$010&0x0038010@0]005%01190]0%0$010]0y0%0$010#0z0%0$010/0"0%0$010+0£0%4n010@0$0%0$01100^0%0$01130&0%0$01150*0%1/01190)0%0$011c0-0%0$011f0=0%0!011h0]003=010}19003=0117190"0!011f0[0"0!011c0=0"0!01190-0"0!01150)0"0!01130*0"0!01100&0i1s010@0@003=01190@0i0!01130^0"0!01100%0"2j010@0£0"0!010+0"0"0!010#0!0"0y010]0z0"0}010&0x0:0}010]0y000}01160y0:0}010#0z000}01140z000}01140!000:010@0/003=01190/000}01160"0:2'010@0£000}01140£000}01140$0:0}01120%000}01160%000:01120@003=011e0@000001140^0:2'01120&000}01160&0:0}01100*000}01140*0:0}010@0(000}01140(0:0}010{0)003=011013003=011c13000}01160)0:0}010_0-000}01140-0:0}010#0=000}01140=0:0_010]0[000}01160[0:0$010&0]007v010<19007v011b190%0$010]0]0%0$010#0[0%0$010/0=0%0$010+0=0%0$010@0-0%0$01100)0%0$01130)0%0$01150(0%0$01190*0%0$011c0*0%0$011f0&0%0!011h0^003=010@0@001=01190@0"0!011f0^0"0!011c0%0"2001190%0"0!01150$0"0!01130£0"0!01100£0i3=010}0/003=01170/0i0!01130"0"0!01100"0"0!010@0!0"0!010+0z0"0!010#0z0"0y010]0y0"1/010$0x0:0}010}0x0:1/010-0x0:1/010'0x0:1/010/0x0:1/010{0x0:1/010<0x0:0}01160x0:1/01130x0:3z011f0x0%7v011d0]0%3=011d0]0:3=011b0]0:3=011i0]0%0$011k0x0%0$011o0x0%3=011f0]000=011u0x0[0=011r0x0[0=011p0x0[0(011i0x0[7v011d0]0y0x011e0x0z0x011f0x0y0x011g0x0y0x011h0x0y0x011i0x0z0x011l0x0y0=011p0x0[0=011o0x0[0=011i0x0[0=011f0x0[3=011b0]0[0=011d0x0[0=01190x0[0=01130x0[0=01110x0[3=01160]000=010<0x0[0=010@0x0[0=010{0x0[0=010/0x0[0(010,0x0[3=010*0o00mv010!0g000}010#0g000}010/0g0:0}010_0h0:0}010/0i0:0}010/0k0:3=010(0v000}01100l000}01130l0:0}010/0m0:0}010/0o0:0}010_0p0:bf010-0%000}010#0r000}010/0r0:0}010_0s0:0}010/0t0:0}010/0v0:0}01100w000}01130w0:0}010/0z0:0}010#0£000}010/0£0:0}010_0$0:0}010/0%0:0}010/0&0:3=010[10000}01130*0:0}010/0(0:0}010/0-0:0_010_0=0:3=010'19007v010&0]000=010<0]0[0=010#0[0[0=010.0-0[0=010_0)0[0=010{0*0[3=010]0@000=010@0^0[0=01100%0[0=01120£0[0=01140"0[0(01160z0[mv010!0x00mv010*0x000}010#0x0:3=010#0x0:3=010/0x0:3=01100x0:3=01130x0:3z011c0x0:7v011a0]0u7v011a0]0u3=011a0]003=011m0]0:3=01180]0:3=011f0]0038011r0]0%0$011m0x0%3=011c0]003=011o0]000$011v0x0%0$011y0x0%7v011a0]006}011m0]000!011$0x0"0!011y0x0"0!011u0x0"0!011r0x0"0!011q0x0!0!011e0x0"0!011f0x0"0!011m0x0"3=01180]0%0$011i0x0%0$011f0x0%3=01130]003=011f0]0%0$01100x0%0"010~0x00mv010x0x000}010@0x0vl<010)0x0t0}01110y0:0}01100z0:3=010,0+000}01190£000}011c0£0:0}01100%0:0}01110&0:bf010/10000}010@0*0:0}01110(0:0}01100)0:0}01190[000}011c0[0:0}01100'0:0}01110#0:0}010@0,000}01100,0:0}01110.0:0}01100_0:3=010+1n000}01190{000}011c0{0:0}01100:0:0}01100@0:0_01110~0:3=010:1w007v010)10007v010]10007v010'10006_010/10000=0118100[0=010@0<0[0=010<0@0[0=01110:0[0=01130{0[3=010{1l000$01160+0%0$01130_0%0$01110.0%0$010<0,0%0$010@0#0%0$010/0'00mv010x0]000}010@0]000}01100]0vl<010)0]0t0}01110]000}011d0]0:0}01190]000}01190]0:3=01150]000001190]0:1_011c0]0:1*011c0]0:0_01190]0:3=011f19003=011d190:3=011c190k1_011h0]0:1]011d0]0:0:011h0]001/011h0]003=011f190:3=011a1900bf011a190:1]01150]0:3=011819001_011d190%1/011d0]0:3=011b19007v011a190k1f01120]0%0}011e0]0%1f01150]0:1]01120]0l1y011e0]003=0118190:0}01130]0:3=0116190:1/01190]0d1^011b0]0:1f010)0]000#010+0]0,0#010@0#0r1f010]0.0r0#01100/0,1f010{0}000#01150}0,0#01190~0r1f010@100r0#011c120,1f011615000#011h150,0#011l190r1f01191a0r0#011o1c0,0}011i1g003=011h1g003=011o1g003=011t1g0:0}011f1h0:0}01191i0:0}01161j0:0=01131k003=011f1k003=011r1k0[0=010@1k0[0=010{1l0[0=010/1m0[0=010#1n0[0=010)1o003=011d1o003=011p1o0[0=010]1o0[0=010/1p0[0=010{1q0[0=010@1r0[0=01101s003=011c1s003=011o1s0[0=010@1s0[0=010{1t0[0=010/1u0[0(010]1v0[0#010*1w007v011h1w007v011m1w007v011t1w0,0#010;1w0.0#010/1w0,0#010~1w0.0#01131w0,0#011a1w0.0#011f1w0,0#011j1w000,011f1w003=011r1w0,2{011f1w0.0#011a1w0,0#01131w0r3z011a1w003z011m1w0r0#010~1w0,0#010/1w0.0]010;1w0,q3010"1g000n010~1g0o0n01111c0o0n0117170o0n011a120o0n011d0~0o0n011j0+0o0n011m0#0o0n011p0[0o0n011v0*0o0l011y0£0o0}001v0x0:0}001x0z0um0010"0y0uk{010"0y003=010=0.003=010}0.003=010]10003=010@10003=010'1b003=010<1b007v010/1b007v010}1b003z010#1l003z01101l0:0_00171t0:0x00111w00o}010y1w0y0x00141q0z0x00181j0y0x001d1c0y0x001g160y0x001k0<0z0v001p0_0y0}001s0]0:0}001r0;00bf010_1000bf0114100:0}00181o003=010{1o003=01161o0:0}001b1q0:0}00181s000}001d1s0:0_00141u000_001b1u0:1_00191<000u010%1w003=010_1<003=010@1<0u0t000~1u016^010%1t0t0t00121r0u0t00141o0u1/00191l0u0t001a1i0u0t001e1f0u0t001l1c0u1_001j19003z010~19003z011119000u011719003z010}190u350017160u0t001a130u0t001e100u1/001j0@0u0t001m0{0u0t001q0/0u0r001v0#0u0}001s0]000t010y0]0uk{010y0]0u0}001r0;003=010_10003=011410003=010{18003=011618003=010:1g003=01181g007v01111g006!01141g0:0}00171o003z010~1o002#011a1o0:0}00161q0:0}00151s000}00191s0:0}00141u000_001a1u0:38010'1<003=011b1<0%0$01141p0%1f010(1h000$010<1h0%0$010<190%1f010$11000$010_110%0$010'0+0%1f010w0]0k3q010[0]0m1.010(0]0k2[010^0]0i1f010$0]1g1f010'0]003z010*0]0077010[0]003z010/0]1g1f010$0;1g1f010w0'002w010(0'003z010_0'1g1f010$0#1g1f010(0,1g1f010'0.003z010-0.0077010_0.003z010{0.1g1f010(0/1g1f010$0_1g1f010w0+003z010[0+003z010:0+1g1f010$0{1g1f010(0}1g1f010u0:003z010]0:0077010.0:0077010+0:003z010@0:1g1f010"0@1g1f010&0~1g1f010]0<003z010'0<003z010<0<1g1f010&101g1f010"111g1f010u12003z010,120077010+120077010@12003z0111121g1f010"131g1f010&141g1f010]15003z010.15003z0112151g1f010&161g1f010"161g1f010u17003z010_170077010@170077011217003z0114171g1f010"181g1f010&191g1f010]1a003z010+1a003z01151a1g1f010&1b1g1b010"1c1g1f010s1d003=010}1d007v01101d007v01131d003=01171d1g1f010%1e1g1f010=1f1g1f010#1g001f010}1g003=010@1g003=01191g1g1f010=1h1g1f010%1i1g1f010s1j003=010<1j007v01131j007v01171j003=011b1j1g1f010%1k1g1f010=1l1g1f010#1m001f010}1m003=01101m003=011c1m1g1f010=1n1g1f010%1o1g1f010s1p003=01121p007v01171p007v011c1p003=011e1p1g1f010%1q1g1f010=1r1g1f010#1r001f010}1r003=01131r003=011f1r1g1f010=1s1g1b010%1t1g1f010p1u003=01141u003=01171u003=011d1u003=011g1u1g1f010"1v1g1f010"1w1g1f010]1x003=01161x003=01191x003=011d1x003=011i1x1g1f010]1y1g1b010@1z1g1f010'1!001f010_1!001f010}1!003=01171!003=011b1!003=011g1!003=011j1!1g1f010]1"1g1f010"1£1g1f010]1$003=01191$003=011d1$003=011g1$003=011l1$1g1f010]1%1g1f010@1^1g1f010,1&001f010}1&001f010<1&003=011b1&003=011g1&003=011j1&003=011n1&1g1f010"1*1g1f010]1(1g1f010_1)001f010@1)001f01111)003z011d1)003z011g1)003z011l1)003z011p1)1g1f010]1-1g1b010"1=1g0$010n1[001$011l1[0y0x011x1[060$010z1[0t0x011q1[0b0$010&1[0n0y011l1[0h0$010;1[0h1£011l1[0n0$010.1[0b0x011e1[0t0$010~1[060x01191[0y0x01101[002w011j1[0y0x010:1[060$011e1[0t0x010.1[0b0$01171[0n0x010;1[0h0$011e1[0h0x010£1[0n1f011j1[0b0x010£1[0t0$011v1[060x010q1[0y0=010v1[001$011h1[0y0x011t1[0e0=010*1[0l0x011m1[0r0=010;1[070y011h1[0y1£011h1[070=010{1[0r0x011a1[0l0=010~1[0e0x01151[0y0=010:1[002w011f1[0%0$011a1[080=010_1[0w0$01131[0g0=010;1[0o0$011a1[0o0=010-1[0g1f011f1[0w0=010y1[080$011r1[0%0=010$1[001$011d1[0y0x011p1[0e0=010-1[0l0x011i1[0r0=010'1[070y011d1[0y2/011d1[070=010.1[0r0x01161[0l0=010{1[0e0x01111[0y0$01121[000$01111[0%0$010{1[0%0$010.1[001g011d1[0%0$010'1[0%0$010-1[001f011d1[0%0$010$1[000$011i1[0%0=010&1[003=011n1[0%0$011i1[080=010]1[0w0$011b1[0g0=010.1[0o0$011b1[0o0=010{1[0g0$01161[0w0=01101[080$01141[0%0=01131[003z011i1[0%0"011f1[080=01101[0w0"011c1[0g0=010{1[0o0"01161[0o0=010.1[0g0"01131[0w0(010&1[080"01101[0%0=010z1[003=01191[080=010&1[0w0$011e1=0g0=010;1=0o0$011a1-0o0=010.1-0g0$01121-0w0=010~1)080$011e1)0%0=01101(003=01171(0%0$011j1(080=010:1(0w0$011e1*0g0=010.1*0o0$011a1&0o0=010;1&0g0$01121&0w0=010£1^080$011e1^0%0=010*1%003=01151%0%0$011h1%080=010;1%0w0$011a1$0g0=010{1$0o0$01161£0o0=010;1£0g0$010~1£0w0=010{1"080$011a1"0%0=010:1!003=01131!080=010_1!0w0$011a1z0g0=010;1z0o0$01161y0o0=010-1y0g0$010~1y0w0=010y1x080$011a1x0%0=010$1w003[01111w0%0$011d1w080=010-1w0w0$01161v0g0=010.1v0o0$01121u0o0=010-1u0g0$010{1u0w0=010.1t080$01161t0%0=010{1s003=01111s0%0$01161s080=010.1s0w0$01121r0g0=010-1r0o0$010{1q0o0=010.1q0g0$01161q0w0=010-1p080$01121p0%0}010&1o003=011b1o0%0$01101o0k0}010]1n0k0$01141n0%0}010#1m000$010<1m0%0$01141m0k0}010_1l0k0$01101l0%0=010{1k003z01161k0%0"01101k080=010/1k0w0"01131j0g0=010#1j0o0"010{1i0o0=010]1i0g0"01131i0w0(010&1h080"01101h0%1/010z1g00bf01161g000}010.1g003=01141g0:0}010.1g0:1/010z1g007v01191g000}010@1g007v01171g000}010}1g0:1]010&1g0:0_01141g0:t<010z1g00t<010=1g00bf011i1g0:0}011e1g0:1/010.1f0:0}01141e0:7v010{1d000}01121d0:0}01141c0:1/01161b000}011a1b0:0}011e1a0:1/011a190:0}011e180:1/011217000}011a170:0}0114160:3=010_15003=011g150:0}011e140:1/011413000}011a130:0}0112120:7v010@11007v011l110:0}011g100:1/01190<000}011e0<0:0}011a0~0:1/01120@000}01190@0:0}011a0:0:1/01140}000}011e0}0:0}011g0{0:7v010}0+007v011j0+0:0}011g0_0:1/01170/000}011e0/0:0}011a0.0:1/01120,000}01170,0:0}011a0#0:1]01140'000}011e0'0:0_011g0;0:0t010w0]000j01120]0k0j011a0]0a0t010(0]0a0j011e0]0k0t010.0]000j011e0]0k1z011m0]0a0t010~0]0a1f011q0]0kbf010{0]0pa,01160]0raq011i0]080}011s0]0:0}011m0[000}011q0[0:0}011e0[0:0}011g0=000}011e0=0:0}011e0-0:0}011s0-0:0}011m0)000}011q0)0:0}011s0)0:0}011m0(000}011q0(0:0}011e0(0:3=010_0*000q011g0*0q3k011g0*0y0}011a0*000}011e0*0:0}011e0&0:0}011s0&0:7v010@0^000}011m0^000}011q0^0q7401190^0q6&011l0^080}011s0^0:0}011m0%000}011q0%0:0}011e0%0:0}011g0$000}011e0$0:0}011e0£0:0}011s0£0:7v010}0"000}011m0"000}011q0"0q7401170"0q6&011j0"080}011s0"0:0}011m0!000}011q0!0:0}011e0!0:0}011g0z000}011e0z0:0}011e0y0:0}011s0y0:e<010_0x000}011m0x000}011q0x0oe£01140x0q2~011g0x0a0}011s0w0:0}011m0w000}011q0w0:0}011e0v0:7w011g0v0:0}011a0u000}011e0u0:0}011e0u0:0}011s0t0:0}011m0t000}011q0t0:0}011s0s0:0}011m0s000}011q0s0:0}011e0r0:3-011g0r0:0}011a0q000}011e0q0:0}011s0p0:7v01120p000}011m0p000}011q0p0n2t011e0p0"0}011s0o0:0}011m0o000}011q0o0:1_011e0n0:0}011g0n0:0}011a0m000:011e0m0:1.011e0m0:0}011s0l0:7v01140l000}011m0l000}011q0l0m3q011g0k0£0}011s0k0:0}011m0k000}011q0k0:0}011e0j0:3-011g0j0:0}011a0i000}011e0i0:0}011e0i0:0_011s0h0:0t010+0g0u0t010:0g0u0t01100g0u0t01150g0u0t011c0g0u6p011h0g0u5}011k0g0u5t011o0g0u0"010o0g004<011t0g0£0"010q0g0$0"010s0g0£0"010t0g0$0"010v0g0£0"010x0g0£0"010z0g0£0"010£0g0d4<011f0g004<011k0g004<011o0g004<011r0g0q0"010%0g0$0"010)0g0£0"010=0g0$0"010[0g0£0"010;0g0£0"010#0g0q4<01170g004<011c0g004<011f0g004<011j0g0d0"010,0g0$0"010+0g0£0"010}0g0$0"010~0g0£0"01100g0£0k01130g000l01150g000<01180g001%011c0g002$011h0g0lcb01150g0l0k01170g0lb601180g0k0k011a0g0la3011c0g0l0k011d0g0l0k011f0g0l8e011h0g0l0k011j0g0l0k011k0g0l0k011m0g0k0k011o0g0l0k011p0g0l0k011r0g0l0k011t0g0l0k011v0g0l0k011w0g0l0k011y0g0l0k011!0g0k0k011"0g0l0k011$0g0l0k011^0g0l0q011^0g0r0q011$0g0q0q011!0g0r0q011w0g0r0q011t0g0q0q011r0g0r0q011o0g0r0q011k0g0q4a011h0g0r0q011f0g0r3k011c0g0q2{01180g0r2v01150g0r0q01130g0q0q01100g0r0q010:0g0r0q010+0g0q0q010/0g0r0!010[0g002k01130g007v01180g007v011f0g0"0!01100g0"1a01130g0"0!01150g0"4101130g0!0!01100g007701150g0077011c0g0077011h0g0"0!010#0g0"0!010+0g0!0!010#0g0"0y010!0g0"0;010u0g004<011b0g0'0;010w0g0;0;010y0g0'0;010"0g0;0;010$0g0'0;010&0g0;0;010(0g0h4<01190g004<011e0g004<011l0g0y0;010-0g0;0;010]0g0'0;010'0g0;0;010.0g0'0;010_0g0;0;010{0g0y4<01110g004d01190g004<011d0g0h0;010@0g0;0;010<0g0'0;01120g0;0;01140g0'0;01160g0;0;01190g0'2w011b0o000v010<0o0w0v01120g0w0v01140g0w0v01160g0w0v01190g0w1f011b0g0w0v011e0g0w0v011g0g0w0v011i0g0w0v011l0g0w0v011n0g0w0v011q0g0w0v011s0g0w0v011u0g0w0v011x0g0w1f010&0g003z011z0g1g1f010]0g1g1f010{0g1g0}010{0g0%0}010+0g000$010~0g0%0$01100g0k0}010:0g0k0$01150g0%0}01100g003=011a0g0%0$01150h0k0}010~0i0k0$01120j0%0}010:0l000$01110l0%0$01130n0k0}010<0o0k0$01180p0%0}01130r001/011d0r0%0$01180t0k0_01110u0k0"01150v0%0$010.0x000$010<0x0%0$010{0s000$01110s0%0$010@0m000$01160m0%0$01160h0k0}010<0i0k0$01120i0%0}010+0k000$010~0k0%0$01100l0k0}010:0m0k0$01150n0%0}01100o003=011a0o0%0$01150p0k0}010~0q0k0$01120r0%0}010:0s000$01120s0%0$01140u0k0}010<0u0k0$01180v0%0}01140x0%0$01180v0k0_01120t0k0$01150s0%bf010.0p000$010<0p0%0$010{0m000$01110m0%0$010@0j000$01160j0%7v010]0g0%0$010{0g000$01110g0%0$010@0g000$01160g0%0$01160i0k0}010<0j0k0$01120k0%0}010{0m000$010<0m0%0$01110o0k0}010@0p0k0$01160r0%0}01110t003=011b0t0%0$01160v0k0}010<0w0k0$01120x0%3=010&0z000t010<0z0u0t01110"0a0$010{0£0k0t01160$0k0$010@0%0a0t01160%0u0}01110&001/011i0&0%0$011b0(0k0_010<0)0k0"01160-0%0j010$0]000j010,0]0k0j010-0]000j010{0]0k0j010]0]000j010@0]0k0j010/0]000j01110]0k0j010{0]000j01160]0k0j010@0]000j01190]0k0#01130]0,0#01160]0.0#01190[0,0#011d0[0,0#01190=0.0#01160=0,0#01130-0,0#010@0-0.0#010{0)0,0=010/0)007v01130)007v011b0)007v011f0)0[0=010]0(0[0=010-0(0[0=010$0*0[0=010-0*0[0=010]0&0[0=010/0&0[0=010{0^0[0=010@0^0[0=010<0%0[0}01110%007v01190%007v011d0%0:0}01160$0:0}01130£0:0}01110£0:0}010@0"0:0}010/0!0:0_010,0z0:0n010(0z0o0n010'0y0o0n010}0y0o0n010<0y0o0l01120y0o0}00170x00sv010(0x0:0_001c0x0y0}001d0x003=01160]00t<010}0x00t<010<0x0y0}001d0z0:0}001b0$0:0}001p0^003=01140@0:0}001b0)0:0}001d0=0:0}00170]0000001b0]001_011b190:0}001d0]0:0}00170[000:001b0[0:2#001b0[0:0}001p0=0:0}001j0=000}001n0=0:1_001b0-0:0}001d0-0:0}00170)001_001b0)0:0}001d0)0:0}00170(000:001b0(0:0}001b0(003=0116100:0}001b0&0:0}001d0&0:0}00170^000}001b0^007v01120@0:0}001d0^0:0}00170%000}001b0%0:0}001b0%0:0}001p0$0:0}001j0$000}001n0$0:0}001b0£0:0}001d0£002#010<0/0:0}001d0"0:0}00170!000}001b0!0:0}000<0!0:0}00110z003=010{0#0:0}000<0z0:0}000}0y0:0_000'0y0:0+000,0x00t<010q0x00t<010)0x0sty010£0x00ty010;0x0t0<010,0w030}000}0w0q0y010+0w0y0:000,0v000:000+0v0:ra000,0u00ra000+0u0:0}00170t0:0}00110s000}00150s0:0}00110r000}00150r0:0}00170q0:0}001d0p000}001h0p0:0}001j0o0:0}001d0n000}001h0n0:0}001d0m000}001h0m0:0}001v0l0:0}001p0k000}001t0k0:0}001p0j000}001t0j0:0}001v0i0:3z001"0g003z001^0gf07v01150x7w7v010~0x7w3=01110x3[7701170xbg3=01150x3[7v01170x7w3=01150x3[3=01170x7we<01140]f07701150x7w0_010r0x0:1w010$0x0:0$010[0x0%0$010*0$000$010#0$0%0$010]0-000$010/0-0%0$010#0#000$010:0#0%0$010/0}000$01100}0%0$010@11000$0113110%0$011018000$0118180%0$01131f000$011c1f0%0$01191l000$011f1l0%0$011c1s000$011k1s0%0$011f1y000$011o1y0%0#011o1[000#011w1[0,0#011l1[0.0#011f1[0,0#01191[0.0#01131[0,0#010@1[0.0#010/1[0,0#010#1[000#010:1[0,0#010/1[0.0#010@1[0,0#01131[0.0#01191[0,0#011f1[0.0#011l1[0,0$011o1[000$011w1[000$011r1[0%0$011f1=000$011o1=0%0$011c1=000$011k1=0%0$01191-000$011f1-0%0$01131-000$011c1-0%0$01101)000$01181)0%0$01131(000$011c1(0%0$01191(000$011f1(0%0$011c1*000$011k1*0%0$011f1*000$011o1*0%0$011l1&000$011r1&0%0$011o1^000$011w1^0%0$011f1%000$011o1%0%0$011c1%000$011k1%0%0$01191$000$011f1$0%0$01131$000$011c1$0%0$01101£000$01181£0%0$01131"000$011c1"0%0$01191"000$011f1"0%0$011c1!000$011k1!000$011o1!0%0$011l1z000$011r1z0%0}011o1y000}011w1y0:0}011l1y000}011r1y0:0}011f1x000}011o1x0:0}011c1w000}011k1w0:0}011m1v000}011u1v0:0}011j1u000}011p1u0:0}011d1t000}011m1t0:0}011a1s000}011i1s0:0}011j1r000}011r1r0:0}011g1r000}011m1r0:0}011a1q000}011j1q0:0}01171p000}011f1p0:0}011h1o000}011p1o0:0}011e1n000}011k1n0:0}01181m000}011h1m0:0}01151l000}011d1l0:0}011c1k000}011k1k0:0}01191k000}011f1k0:0}01131j000}011c1j0:0}01101i000}01181i0:0}011a1h000}011i1h0:0}01171g000}011d1g0:0}01111f0:0}010~1e000}01161e0:0}01171d000}011f1d0:0}01141d000}011a1d0:0}010~1c000}01171c0:0}010}1b000}01131b0:0}01151a000}011d1a0:0}011219000}0118190:0}010:18000}0115180:0}010+17000}0111170:0}011016000}0118160:0}010@16000}0113160:0}010/15000}0110150:0}010#14000}010:140:0}010~130:0}010}12000}0111120:0}010,11000}010~110:0}010;10000}010{100:0}010}0<000}01130<0:0}010_0<000}010~0<0:0}010;0~000}010}0~0:0}010=0@000}010/0@0:0}010+0:000}01110:0:0}010.0}000}010:0}0:0}010[0{000}010+0{0:0}010)0+000}010,0+0:1f010#0_000}010:0_0:0}010/0_0k1f010]0/0%0}010#0/0%1f010-0.0k0}010[0.0:1f010;0,000}010{0,0:0}010,0#0k1f010=0#0%0}010;0'0%1b010(0'0k0}010-0;0:1/010_1900mv010$0]0u0t010)0]0u0t010]0]0u0t010'0[0u1/010.180u0t010+0=0u0t010@0=0u0t010<0=0u1/010]15000t01140-0u0t01110-0u0t010<0)0u0t010@0)0u0:010'13000t010+0)0u0t010.0(0u0}010'0(0u0t010]0*0u1/010_100u0t010)0&0u0t010]0&0u0t010'0&0u1/010.0@0u0t010+0^0u0t010@0%0u0t010<0%0u1/010]0:000t01140%0u0t01110$0u0t010<0$0u0t010@0£0u0:010'0+000t010+0£0u0t010.0£0u0}010'0"0u0t010]0"0u1/010_0.0u0t010)0!0u0t010]0z0u0t010'0z0u1/010.0#0u0t010+0y0u0t010@0y0u0t010<0x0u1/010]0]000t01140x0u0t01110x0u0t010<0w0u0t010@0w0u0:010'0-000t010+0v0u0t010.0v0u0}010'0v0u0t010]0u0u1_010_0)00ef010$0u0u0t010)0t0u0t010]0t0u0t010'0s0u1/010_0s0u0t010+0s0u0t010@0r0u0t010<0r0u1_010.0$000t01110q0u0t010<0q0u0t010@0q0u0t010+0p0u1/010.0p0u0t010'0o0u0t010]0o0u0t010)0o0u0:010]0y0u0t010)0n0u2'010]0m0u0t010'0m0u0t010.0l0u0t010+0l0u0t010@0l0u0t01110k0u2m010'0u000t010<0k0u0t010@0j0u0t010+0j0u0t010_0j0u0t010.0i0u1p010'0i0u0t010]0h0u0r010)0h0u0}010"0g0:0}010(0g0:nf01190g0:mj011d0g0:ln01110g00ln01140g003z011l0g003z011p0g7w1m00^07%z00l],7[3[z;7+3[<o813["58b3[,t8k3[]78u3[^07%,00r[n7@3[{*883[,t8k3[x/8x3[x98-3[#*8}3[~099/_04*g9y3[&#9=3[:r9:3[xlab3[{,ap3[&ka^3[]ra+3[]/ba3[)vbs<[01,t8k%w07,'xi013=,t8k7x)vbsxw03£;5-zo03'f5/3[=w613[:@6b3[:,6m3[[#6y3[{#6-3[:z6}3[_p793[]17o1_^07%zw02}0m_3=^07%3].wj4e<^07%0&02010804020104020108040201040201080402010804020104020108040201040201080402010804020104020108040201040201080402010804020104020108040201040201080402010804020104020108040201040201080402010804020104020108040201040201083)0&02010804020104020108040201040201083-0&0201080402010402010804020104020108040201080402010402011,0u040201040201083=0&0201080s010s013[0u0s010s01083)0&02010804020104020108040201040201083-0&0201080402010402010804020104020108040201080402010402011,0u040201040201083=0&0201080s010s013[0u0s010s01087w0&0201080402010402017x0u7y02017z0201087!0&020808047"0u04010401083]0&0201080804020108040201040201083;0&02010l0l0402011,2r0402010402017£7$2s02010l0l0x02010l0x02010x02010l0x02010l0l0x02010l0x02010x02010l0x02010l0l0x02017%2r0x02010x02010l3;0&02010l0l0402011,2r0402010402010l3]2s02010l0l0x02010l0x02010x02010l7^2s02010l7&7*7(7)7-7=7[7]7;7'7#7,7.7/7_7+0b7{7}7:7@7~3'3#7<3,3.803/818283848586873_88898a8b8c8d8e8f8g8h3.3/8i3+3+3#3,8j8k8l8m8n8o8p3'8q3{8r8s8t8u8v8w8x8y8z2t3}3:2t3}3:8!2u0c030d0q05030d05030d0q05030d05030d0q1.0c030d0q05030d05030d0q05030d05030d0q05030d0q05030d05030d112v05030d05030d0q1c0c0306070503060503063@0;3~03062w0306072u0c030d0q05030d05030d0q05030d05030d0q1.0c030d0q05030d05030d0q05030d05030d0q05030d0q05030d05030d112v05030d05030d0q1c0c0306070503060503063@0;3~03062w03061y3<090306070m03060m0306070m03060m0306078"0906070m060m06070m060m06078£0903070m030m031/0;0m03060m0306078$0c0306070503060503060705030605030607050306070503060503061/0;0m03060m030607400306074106422x4312070y03060y442x8%0c0705030605030607050306050306071/090306070m03060m03068^0;05030605030607400306074106422x4312070y03060y03063<090306070m03060m0306070m03060m0306078&45038*1_031_031/090306070m03068(8)8-46120r471q0y0r0o4849130o0'4a120r4b1q0y0r0h4c4d0n0h0'0y0r0'0y0r0o1z4e4f4g134h0'4i120r4j1q0y0r0h1c0a4k4l0n0h0'46120r471q0y0r0o4849130o0'4a120r4b1q0y0r0h4c4d0n0h0'0y0r0'0y0r0o1z4e4f4g134h0'4i120r4j1q0y0r0h1c0a4k4l0n0h8=0]8[8]8;8'8#8,8.8/8_8+8{8}4m8:8@8~8<901d9192934n4o9495964p9798999a9b9c9d9e9f9g9h9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9y9z9!9"9£9$9%4q2y9^9&9*4r4n9(4o9)9-9=9[9]9;9'4s9#9,9.9/9_9+9{9}9:9@4t9~9<a0a1a2a3a4a5a64ua7a8a9aaabacadaeafagahaiajakalamanaoapaqarasatauavawaxayaz4va!a"4wa£a$a%a^a&a*a(a)a-a=a[a]a;a'a#a,a.a/a_a+a{a}a:a@a~a<b0b1b2b3b4b5b6b7b8b9babbbcbdbebfbgbhbibjbkblbmbnbobpbqbrbsbtbubvbwbxbybzb!b"b£b$b%b^b&4x4yb*b(4zb)b-4!4"b=b[b]b;b'b#b,b.b/4£b_b+4$b{b}b:b@b~b<4%c0c1c2c3c4c5c6c7c8c9cacb141e141f1g1h1i1e141f1g1h1i1f1g1h1i1e141f1g1h1i1e141e141f1g1h1i1e141f1g1h1i1f1g1h1i1e14cccdcecfcgchcicjckclcmcncocpcqcrcsctcucvcwcx0hcy2zczc!c"c£1j1k1j1!0#1"1£1k1j1!0#1"1£1!0#1"1£1k1j1!0#1"1£1k1j1k1j1!0#1"1£1k1j4^c$c%c^c&c*c(c)c-c=c[c]c;c'c#c,c.c/c_c+c{c}c:c@c~c<d04&d1d2d3d4d5d6d7d8d9dadbdc1l1r1l1$1+1%1^1r1l1$1+1%1^1$1+1%1^1r1l1$1+1%1^1r1l1r1l1$1%1^1r1ldddedfdg4wdhdidjdkdldmdndo4&dpdqdr4*dsdtdudvdwdxdydzd!d"d£d$d%d^d&d*d(d)d-d=d[d]d;d'd#d,d.d/d_d+d{d}d:d@d~d<e0e1e2e3e4e5e6e7e8e9eaebecedeeefeg1&0,eh0.ei4(0,ej1&0,ek0.el4)0,1s0.1m0.1m1&0,1s0.1m4(0,1s1&0,1s0.1m4)0,1s0.1m0.1m1&0,1s0.1memeneoepeqereseteuevewexeyeze!e"e£e$e%e^e&e*e(e)e-e=e[e]e;e'e#e,e.e/e_e+e{e}e:e@4ue~e<f0f1f24-4-f3f4f5f6f7f8f9fafbfcfdfefffgfhfifjfkflfm4vfnfofpfqfrfsftfufvfwfxfyfzf!f"f£f$f%f^f&1{1{f*f(f)4=f-1*f=f[f]f;f'f#f,f.f/f_f+f{f}f:0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v110n0k0c0p0h0k0c0h0k0c1z0*1t0c1t0c0p4[0n0k0c0p0h0k0c0h0k0c4]0*0h0k0c0h0k0c0pf@0n0k0c0p0h0k0c0h0k0c0p0h0k0c0h0k0c0p1z0k0c0p1t0c1t0c4;0*0h0k0c0h0k0c0pf~1}0a09050f0a090f0a09050f0a090f0a09050f0a09050f0a090f0a092!0c0f0a090f0a09054'4#0a09054,0a090f0a094.0c0f0a090f0a09054/1}0a09050f0a090f0a09050f0a090f0a09052!1}0a09050f0a090f0a094;0c0f0a090f0a09054'4#0a09054,0a090f0a094.0c0f0a090f0a0905f<1}0a09050f0a090f0a09050f0a090f0a09050f0a09050f0a090f0a09g00c0f0a090f0a091k4/0n0k0c0p05050/0q0!050p1t0c0p051u1d1:1*1ug1114^0n0k0c0p05051z2y4_0q0!050p4[4+0k0c0p051ug21@1:1*1u0p4=2"4{0n0k0c4}0*1n0c1:0c1u4_1d2v0!0h0c1t0*0h2y1d0k0*1u0n1:0n1(4:1*1n0k4}1@g31*4@g4g51o2£0#1~1o1n1o1(0#4~1o1d1o0f0#0hg60f0#1d1o4~1o1(g7g80_1n0n1~0n2£0_4@2$4+0n2£0_1~0n1n0n1(g94q0_1n0n1~0nga0_gbgcgdgegfggghgigjgkglgmgngogpgqgrgsgtgugvgwgxgygzg!g"g£g$g%g^g&2%4:0ng*g(g)g-4<g=1{g[g]g;g'g#50g,g.g/4pg_g+g{g}g:g@g~g<h0h1h2h3h4h5h6h7h8h9hahbhchdhehfhghhhihjhkhlhmhnhohphqhrhshthuhvhwhxhyhzh!h"h£h$h%h^h&512^h*h(2^1(h)451<0_h-2^1_h=2&0_1_h[0_h]h;0;0g0d2w0_1yh'0d070b0b070!0b0b070g0d070b0b070!0b0b070g0d070b0b070!0b0b072u0z0d070b0b070!0b0b071.0z0d070b0b070!0b0b070g0d070b0b110;0!0b0b1y1c52532*15151)1-54551-1)151556h#0z0d070b0b070!0b0b071.0z0d070b0b070!0b0b070g0d070b0b110;0!0b0b1y1c52532*15151)1-54551-1)151556h,0z0d070b0bh.0;0!0b0b1yh/2*h_1)57h+h{h}h:h@58h~h<i0i1i2i3i4i5i6i758i8i9iaibicidieifigihiiijikiliminioipiqirisitiuiviwixiyizi!i"i£i$i%i^20i&4<i*i(i)i-i=i[59i]i;i'i#i,i.i/i_i+i{i}i:i@i~i<j0j1j2j3j4511n2020j50n1d2&200hj61@2&0h1<1<j70r0p0z1<0oj80*0z0o0g0gj9130/160g0oja5a0*0z0o0g0g210/160g0o5b2z0*0z0o0g0g210/160g0o0p0z0o0g0g5c5d130/165e2(115f5g225h232425265i275j262524235k225ljb5a0*0z0o0g0g210/160g0o5b2z0*0z0o0g0g210/160g0o0p0z0o0g0g5c5d130/165e2(115f5g225h232425265i275j262524235k225ljcjd0*0z0o0g0gje27130/160g2(jfjgjh5m5n575ojijjjk1-5m5o5njljmjnjojpjqjrjs5p2)jt2)5pju2)jvjw27jxjy5q5r5sjzj!5q5r5sj"j£5tj$j%1@j^j&j*4rj(j)j-50j=j[j]j;59j'j#4sj,j.28j/j_j+j{j}j:4tj@j~j<k0k1k2k3k4k5k6k7k8k9kakbkckdkekfkgkhkikj5tkkklkmknko28282!kpkq2-28294]kr2-291=1=ks5u5v5w1=291ckt2-291=1=ku5u5v5wkvkw0+5x172=2[1v18kx195y1a5z2]2;0+ky172=2[1v18kz195y1a5z2]2;0+5x175!5"5£k!k"k£5$k$5%1w0+k%175!5"5£18k^195$1a5%1w0+k&172'5^1v18k*195&1a2#1w0+172'5^1v18k(195&1a2#1w0+k)172'k-1v18k=195*1a2#1w0+k[17k]k;k'18k#195*1ak,1w0+k.k/2=2[1v18k_19k+1ak{2]2;k}k:k@k~k<l0l1l2l3l4l5l6l7l8l9lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl!l"l£l$l%l^l&l*5(l(l)5)l-l=l[l]l;l'l#5)l,l.l/l_5(l+l{l}l:l@l~l<m0m1m2m3m4m5m62,2.2/2_2+m72{2}2:2@2~2a2<303132333435363738395-5=3a3b3c3d3e3f3g3h3i1[3j3k3l3m3n3o3p3q3r3s3t3u3v1]3w3x5[5]3y3z3!1;5;3"5'5#3£5,5.5/5_5+5{5}5:5@5~5<606162636465666768692,6a2.2/2_2+m86b2{2}2:2@2~2a2<303132333435363738395-5=3a3b3c3d3e3f3g3h3i1[3j3k3l3m3n3o3p3q3r3s3t3u3v1]3w3x5[5]3y3z3!1;5;3"5'5#3£5,5.5/5_5+5{5}5:5@5~5<606162636465666768692,6a2.2/2_2+m96b2{2}2:2@2~2a2<30313233343536373839mamb3a3b3c3d3e3f3g3h3i1[mcmd3j3k3l3m3n3o3p3qmemfmgmh3r3s3t3u3v1]3w3xmimj3y3z3!1;mk3"mlmmmnmompmqmrmsmt6c3$6d6e6fmu6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v1[mvmw6w6x6y6z6!6"6£6$6%6^6&6*6(6)6-6=6[6]6;1]6'6#6,6.mx6/mymzm!1;m"m£m$m%m^m&m*3£m(m)m-m=m[m]m;m'm#m,m.m/m_m+m{m}m:m@m~m<n0n16cn23$6d6e6fn3n46g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v1[n5n66w6x6y6z6!6"6£6$6%6^n7n86&6*6(6)6-6=6[6]n9nanbnc6;1]6'6#6,6.nd6/nenfng1;nhninjnknlnmnnnonpnqnrnsntnu3$nvnwnxny6_nzn!n"n£6_n$n%n^n&n*n(n)n-n=n[n]n;n'n#n,n.n/n_n+n{n}n:n@n~n<o0o1o2o3o4o5o6o7o8o9oaobocodoeofogohoiojokolomonooopoqorosotouovowoxoyozo!o"o£o$o%o^o&o*o(o)o-o=o[o]o;o'o#o,o.o/o_o+o{o}o:o@o~o<p0p1p2p3p4p5p6p7p8p9papbpcpdpepfpgphpipjpkplpmpnpopppqprpsptpupvpwpxpypzp!p"p£p$p%p^p&p*p(p)p-p=p[p]p;p'p#p,p.p/p_p+p{p}p:p@p~p<q0q1q2q3q4q5q6q7q8q9qaqbqcqdqeqfqgqhqiqjqkqlqmqnqoqpqqqrqsqtquqvqwqxqyqzq!q"q£q$q%q^q&q*q(q)q-q=q[q]q;6+q'q#q,6+q.q/q_q+q{q}q:q@q~q<r0r1r2r3r4r5r6r7r8r9rarbrcrdrerfrgrh6{rirjrkrlrmrnrorprqrrrsrtrurvrwrxryrzr!r"r£r$r%r^r&r*r(r)r-r=r[r]6}r;r'r#r,r.r/r_r+r{r}r:r@r~r<s0s1s2s3s4s5s6s7s8s9sasbscsdsesfsgshsisjskslsmsnsospsqsrssstsusvswsxsyszs!s"s£2b3%2c3^2ds$3^2e2c2b6:2b2e2c3^2ds%2b3%2cs^s&s*3&3%2f2g2ds(2g2e2f3&6:s)3&2e2f2g2ds-2gs=2fs[s]s;s's#s,6@s.s/s_s+s{s}s:s@s~s<t0t1t2t3t4t5t6t7t8t9tatbtctdtetftgthtitjtktltmtntotptqtrtstttutvtwtxtytzt!t"t£t$t%t^t&t*t(t)t-t=t[t]3_t;t't#t,t.t/t_t+t{t}t:t@t~t<u0u1u2u3u4u5u6u7u8u9uaub3{ucudueufuguhuiujukulumunuo2tupuqurusutuuuvuwuxuyuzu!u"u£u$u%u^u&u*u(u)u-u=u[u]u;4mu'u#u,u.u/u_u+u{u}u:u@u~u<v0v1v2v3v4v5v6v7v8v9vavbvcvdvevfvgvhvivjvkvlvmvnvovpvqvrvsvt4zvuvvvwvxvyvz4!4"v!v"v£v$v%v^v&v*v(v)4£v-v=4$v[v]4%v;v'v#v,v.v/v_v+v{v}v:v@v~v<w001w101w201w301w401w501w601w701w801w901wa01wb01wc01wd01we01wf01wg01wh01wi01wj01wk01wl01wm01wn01wo01wp01wq01wr01ws01wt01wu01wv01ww01wx01wy012h6~wz01w!01w"01w£01w$016~2h2i2i2j6<w%01w^01w&012j2iw*012hw(012hw)012i2j6<2jw-01w=01w[014x4yw]01w;01w'01w#01w,01w.01w/01w_01w+01w{01w}01w:01w@01w~01w<01x001x101x201x301x401x501x601x701x801x901xa01xb01xc01xd01xe01xf01xg01xh01xi01xj01xk01xl01xm01xn01xo01xp01xq01xr01xs01xt010"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%xu01xv01xw01xx01xy01xz01x!01x"01x£01x$01x%01x^01x&01x*01x(01x)01x-01x=01x[01x]01x;01x'01x#01x,01x.01x/010w1'0£0$0%0=0"0(0)0-0w1'0£0$0%0=0"0(0)0-0w3*0£0$0%0=0"0(0)0-0w3*x_01x+01x{01x}01x:01x@01x~01x<01y001y101y201y301y401y501y601y701y801y901ya0144yb01yc01yd01ye01yf01yg01yh01yi01yj010w1'0£0$0%0=0"0(0)0-0w1'0£0$0%0=0"0(0)0-0w3*0£0$0%yk010"yl01ym01yn01yo010w1'yp01yq01yr01ys01yt01yu01yv01yw01yx01yy01yz01y!01y"01y£01y$01y%01y^01y&01y*01y(01y)01y-01y=01y[01y]01y;01y'01y#01y,01y.01y/01y_01y+01y{01y}01y:01y@01y~014{y<01z001z101z201z301z401z501z601z701z801z901za01zb01zc01zd01ze01zf01zg01zh01zi01zj01zk01zl01zm01zn01zo01zp01zq011{zr01zs01zt01zu01zv01zw01zx01zy010^zz012"70710[0t0^1b2k2l2m1b0[0t0^720[0t0^737475760[0t0^0[0t0^1b2k2%2l2m1b0[0t2n2$77783(0t2n1x797a1x1xz!010t0^7b2"70717cz"010t0^1b2k2l2m1b0[0t0^720[0t0^737475760[0t0^0[0t0^1b2k2%2l2m1b0[0t2n2$77783(0t2n1x797a1x1x3(0t0^7bz£01z$01z%017cz^017d7ez&01z*01z(017f7gz)01z-01z=01z[01z]01z;01z'01z#01z,01z.01z/01z_01z+01z{01z}01z:01z@01z~01z<01!0012a!1017f7g!201!301!401!501!601!701!801!901!a01!b01!c01!d01!e01!f017d7e!g01!h01!i01!j01!k01!l01!m01!n01!o01!p01!q01!r01!s01!t01!u01!v01!w01!x01!y01!z01!!01!"01!£01!$01!%01!^01!&01!*01!(01!)01!-01!=01![01!]01!;01!'01!#01!,01!.01!/01!_01!+01!{01!}01!:01!@017h!~01!<017i7j"001"101"2017i7j7h"301"401"501"601"701"801"901"a01"b01"c01"d01"e01"f01"g01"h01"i01"j01"k01"l01"m01"n01"o01"p01"q01"r017k7l"s01"t01"u017m"v017n7o7p"w017q"x017r7s7t"y017u"z017v"!01""01"£017v"$017u7s7t"%017r"^017q7o7p"&017n"*017m"(01")016{"-01"=01"[01"]01";01"'01"#01",01".01"/01"_01"+01"{01"}01":01"@01"~01"<01£001£101£201£301£4017k7l£501£601£701£801£901£a01£b01£c01£d01£e01£f01£g01£h01£i01£j01£k016}£l01£m01£n01£o01£p01£q01£r01£s01£t01£u01£v01£w01£x01£y01£z01£!01£"01££01£$01£%01£^01£&01£*01£(01£)01£-01£=01£[01£]01£;01£'01£#01£,01£.01£/01£_01£+01£{01£}01£:01£@01£~01£<01$001$101$201$301$4016@$501$601$701$801$901$a01$b01$c01$d01$e01$f01$g01$h01$i01$j01$k01$l01$m01$n01$o01$p01$q01$r01$s01$t01$u01$v014*$w01$x01$y01$z01$!01$"01$£01$$01$%01$^01$&01$*01$(01$)01$-01$=01$[01$]01$;01$'01$#01$,01$.01$/01$_01$+01${01$}01$:01$@01$~01$<01%001%101%201%301%401%501%601%701%801%901%a01%b01%c01%d01%e01%f01%g01%h01%i01%j01%k01%l01%m01%n01%o01%p01%q01%r01%s01%t01%u01%v01%w01%x01%y01%z01%!01%"01%£01%$01%%01%^01%&01%*01%(01%)01%-01%=01%[01%]01%;01%'01%#01%,01%.01%/01%_01%+01%{01%}01%:01%@01%~01%<01^001^101^201^301^401^501^601^701^801^901^a01^b01^c01^d01^e01^f01^g01^h01^i01^j01^k01^l01^m01^n01^o01^p01^q01^r01^s01^t01^u01^v011#0{0}0:0@0]0~0<100e0204010s0u2o2p2q0s0u04010e020<100]0~0:0@0{0}1#0{0}0:0@0]0~0<100e0204010s0u2o2p2q0s0u04010e020<100]0~0:0@0{0}1#0{0}0:0@0]0~0<100e0204010s0u2o2p2q0s0u04010e020<100]0~0:0@0{0}1#0{0}0:0@0]0~0<100e0204010s0u2o2p2q0s0u04010e020<100]0~0:0@0{0}1#0{0}0:0@0]0~0<100e02^w0101^x010u^y01^z01^!01^"01
i = 13306
index = 38065
instrument = 1
max = 2661
midi channel = 0
midi index = 32229
midi song = 2
midi start = 61844
mod = 0
multiplier = 2048
next active pulse count = 0
note tracker = 40800
number = 0
number of tracks = 3
old pulse count = 40800
parameter 1 = 0
parameter 2 = 0
paused? = false
pitch = 0
playing? = true
pulses per quarter beat = 480
row = 2
segment index = 0
string = Ondine
temp = 2655
tempo = 1
tempo index = 3
tempo tracker = 0
time = 85.125
time division = 480
timer start = 7847.0017693403
track number = 0
value = 2661
variable value = 2661
volume = 0


//----- Lists ---------------------------------------------------------------------------------------------------------

all song data = { 
    0106Canyonfn001/0q1r1$3[7v2y151<007v210!1-001/0q1m1$3[3=2y151<001/0q1r0-001/0q1f1z003=210!1-001/0q1r1c007v270&1<001/0q1f1$001/0q1m1u001/0q1k1u001/0q1m0#001/0q1k0}001/0q1m0:001/0q1r0<001/0q1r1z001/0q1k0{3[7v230£1.001/0q1r1b001/0q1r0=001/0q1r0^001/0q1r0~001/0q1m0-001/0q1r1^003=210!1&3[1/0q1f0:001/0q1k1$007v210!1)001/0q1m0]001/0q1k1w001/0q1k0=001/0q1m0+001/0q1k1£3[3=200z1/003=210!1£001/0q1f1c001/0q1k0[001/0q1k0o001/0q1k1x001/0q1k0-001/0q1k0$001/0q1m0.001/0q1k0.001/0q1m19001/0q1m1£001/0q1k0+001/0q1m14001/0q1f1£003=2y151<3[3=270&1<3[7v270&1<003=2g0'1<3[1/0q1f1c003=0"0)1&003=0q1c1&003=280*1<3[3=010@1£003=1l191£3[1/0q1f163[1/0q1r1c003=0"0*1&7w3=2z161<001/0q1f0:003=0q171&3[1/0q1f0;007v2e0]1:003=0q1r1^003=210!1(3[3=210!1)001/0q1f17003=0q0:1&003=01121£3[1/0q1f0-3[1/0q1f19007v200z1/003=2d0[1<003=210!1%3[3=260^1<003=2z161-3[3=2z161{3[7v2z161-001/0q1f0;3[3=230£1.001/0q1f0-3[3=210!1.003=01161£001/0q1c1$3[1/0q1f113[1/0q1f173[1/0q1r0-3[3=2c0=1<003=210!1)003=230£1.001/0q1f11001/0q1f19003=0q0~1&3[1/0q1f1z3[1/0q1r1b7w7v2y151<003=200z1/003=0"0%1^3[3=200z1]00<=010"0v1^007v200z1.00mv0"0!1&00mv0"0*1$3[3=200z1.003=0q0/1u003=0"0^1^001/0"0£1u003=2a0)1<009<01181{007v2z161_7w3=2z161_3[3=01171{003=1l1a1{3[3=2z161(007v2z161[7w3=2z161:003=2z161(3[3=2z161[001/0q1m0}3[3=011f1{001/0q1f0^001/0q1f0<007v210!1.003=0"0y1$003=210!1.3[3=230£1~003=0q101&3[3=0q131&007v01101£007v1l171£003=230£1#003=2g0'1]007v0q1c1&003=1l171£007v2y151<3[1/0q1r0^3[1/0q1r0~3[1/0q1r0<003=0"0&1"003=0"0£1z003=210!1y003=2m0+1<003=0q171^003=210!1^007v280*1<003=2-1h1~003=2-1h1@001/0q1f0/003=0"0£1$3[3=2)1g1^003=0q151&3[3=2d0[1<3[3=2a0)1<003=2c0=1<001/0q1f16007v2h0#1<003=0"0y1z3[7v230£1~003=0q131&3[3=0q1a1&003=0q121&003=0q1a1&003=0q1e1&003=0q1g1&3[7v010}1£007v01141£003=0q1h1&002v01101£001f1l141£1g1f1l171£1g2v010@1£002v01151£002v1l191£003=01101£003=1l151£3[1/010<1£001/01121£003=1l1b1£003=2g0'1#003=0q0<1$3[e<010<1£00e<01121£00e<1l171£00e<1l1b1£003=0q191&003=0q0@1"007v230£1.003=250%1<001/0q1f1u001/0q1c1c001/0q1f1b001/0q1c1^3[7v2c0=1<001/0q1a1z007v2e0]1;007v210!1z3[1/0q1f1$3[[f051v1k1r00[f051v1m1r00'<051v1f1u007v200z1'007v210!1£00mv0"0!1$00mv0"0*1x3[3=200z1'003=200z1.00on0"0!1^00on0"0*1£003=0q0+1$003=0"0[1&003=0"0=1$003=0"0)1w001/0"0*1x007v0"0^1$003=0"0^1&001/0q0/1u001/0"0*1£3[3=0q0;1z003=200z1*001/0"0!1!3[qf1v1m1£00f01v1k1r00qf1l1m1i3[bf1v1k1p00bf1v1r1x00bf011r1i003=200z1,3[+v061v1k1u00+v061v1m1q00+v061v1r1q00+v061v1t1$00+v06011k1i003=2a0)1@003=200z1(003=210!1u003=280*1~3[3=2a0)1{003=280*1}3[3=270&1{3[7v270&1_3[3=200z1;003=0q0/1!3[1/0q1r0=003=0q0/1^003=0q181^003=0"0[1^003=0"0=1£001/0"0)1u003=200z1;001/0"0*1!003=0q151^003=0"0&1z001/0"0*1$007v210!1y003=0q131$003=200z1=003=210!1z003=0q0[1x003=0q101£001/0"0!1q3[7v270&1:1_1/200z1/001/210!1)1_3=270&1<007v200z1*00}<010"0v1^00}<010q1f1w00}<010q1k1s00}<010q1m1w00}<010q1r1!bg"v011v181w7w3=2c0=1<3[3=2c0=1}003=2d0[1)003=210!1"3[7v260^1<007v210!1(00t<0"0^1^3[3=2z161z1g9<01131{006f1l1c1{007v2z161z3[qf01111{00qf01151{00qf1l181{3[7v2z161;00on0"0$1x7w3=2z161.3[e<01131{00e<01181{00e<1l1c1{00qf0"0£1&3[7v2z161(007v2z161;3[1/01151{001/1l181{3[e<010~1{00e<01131{00e<1l171{003=2z161_3[3=2z161-3[3=010:1{003=1l151{003=2z161[3[3=010}1{003=1l131{3[3=2z161:3[e<010+1{00i=1l111{003=2z161y00;$010"0!1&0f_0011l0[1{3x7v2z161&3[^f01010/1{00^f011l101{007v2z161.3[3=2z161y007v2z161"003=0"0"1v001/0"0£1t3[s7010/1{00s7010{1{00e<1l111{00s70"0$1"3[7v1l0<1{003=2z161&007v2z161(3[7v1l0~1{3[bf010:1{007v010/1{00bf1l0~1{003=2z161<00zv020"0£1&3[7v2z161$3[3=2z161<007v2z161~003=0q1f1^003=0q1k1u003=0q1m1w003=0q1r1&3[bf1l131{001/0q1f0!3[7v1l181{001/0q1f0v001/0q1k0,001/0q1m0<001/0q1r0v2wcv011a1{1g3=2y151~001/0q1f1^001/0q1m1z001/0q1k0!001/0q1m0@001/0q1r0#001/0q1k0<001/0q1r0+003=2-1h1.003=011k1{003=011m1{003=1l1r1{001/0q1f0%001/0q1r0:3[3=2-1h1<001/0q1f0a001/0q1k0v001/0q1r0w3[1/011f1{001/011k1{001/011m1{001/1l1r1{001/0q1m1!3[7v011f1{007v011k1{007v1l1m1{007v1l1r1{001/0q1m13001/0q1k11001/0q1k14001/0q1m1c001/0q1r19001/0q1r1!001/0q1f0{007v2e0]1{00x=01011a1£007v0"0y1$003=0"0-1x00bf0"0y1$003=0q181&003=0q0{1$007v0q101&001/0q0,1m3[3=230£1;003=0q141&00bf0"0£1!005$0q1a1&003=0q0}1$3[3=0q1c1&7w2v010}1£003=0q0}1&003=0q0@1v003=2g0'1=003=0q0@1z003=0q1b1&003=2g0'1$0%1f1l101£003=0q161&003=01151£3[7v210!1)001/0q1f0+001/0q1a1!001/0q1a0@001/0q1a19001/0q1a1l3[3=0q181&001/0q1f0~001/0q1f0y00bf0q1a1&001/0r1f1z001/0r1k1$001/0r1m1$001/0r1r1$3[1/0q1f1£00[f05011k1i00[f051l1m1i003=0q0[1z003=0q0/1x005$0q0+1w00qf0q0[1£007v0q0/1^3[3=0q0:1£003=0q0}1r3[3=0q0+1r001/0q0/1s007v0q0,1£3[3=0q0,1$3[3=0q0.1w3[3=0q0#1o003=0q0[1e00<=010q0*1u00e<011k1i1g*v03091m1<2w7v2y151<00@=02091r1<00+v06011t1i00;v02091t1<00mv0q101£00t<0q0[1^005$0q0+1£005$0q181$003=2e0]1{00qf0q101&00t<0q0[1!003=0q0+1£003=0q0:1$003=0q0}1u003=0q1a1w3[3=0q0+1l003=0q181z003=0q171s007v0q0,1$007v0q151$003=0q0,1$003=0q0.1m003=0q161s3[1/0q0/1k001/0q171q003=0q0#1q003=0q111u00<=010q0*1t00<=010q0~1£3[}<011v1f1z00mv011f1{007v2m0+1}007v091$1<bg[=011v1a1u00x=01011a1{003=091y1<00"v011l181{007v2e0]1#003=091w1+7we<1v131t00e<1l131{0:1p091r1<2#3=210!1^7w7v01151{008=1l1d1{003=091p1<003=091"1<00bf0q1d1z007v0q1c1k2w7v230£1.007v0q1a1k3[3=2z161~00s70q181o00e<0q1c1v003=0q1a1p003=0q181u00i=0q171i00t<0"0^1&005$0q151u007v0q131r00e<0q111r00(<010q101s00s70q131k00<=010q1f1g007v2-1h1'003=2)1g1z3[3=2)1g1$003=2)1g1w003=2)1g1[3[3=2-1h1'003=2-1h1<3[3=2)1g1(3[7v01151{008=011d1{00t<1l1f1{007v2-1h1<00bf0q1d1s0%5$0q1c1"1_7v230£1.1_3=0q1a1u1_3=2z161~00s70q181u00e<0q1c1!003=0q1a1x003=0q181!00i=0q171k00v/0"0^1&005$0q151!007v0q131s00e<0q111u00^f010q101u00qf0q131l00(=030q1f1s007v2-1h1@003=2)1g1v003=2-1h1]003=2-1h1/3[3=2)1g1y007v2-1h1~3[7v2-1h1<3[3=0q1d1^3[3=0q1f1%3i7@0q1c1w001p0q1b1m0u1/0q1f1c3[3=0q1a1!3[3=0q181z3[7v0q151^3[3=0q131$3[3=0q131v3[1/0q101t003=2f0;1<3[3=0q101£003=0q0~1w007v0q101£3[7v260^1.007v2a0)1<007v280*1,003=0q0~1t003=0q0:1z003=0q0/1z003=0q0#1^00[f05011k1b00[f051l1m1e00on0q0[1^003=0q0/1&005$0q0+1^00on0q0[1$3[3=0q0:1&003=0q0}1s3[3=0q0+1j001/0q0/1p007v0q0,1u3[3=0q0,1u3[3=0q0.1p001/0q0/1w3[3=0"0%1^1_1/0q0#1w1_3=0q0;1u00<=010q0*1w0u1p011k1i3i7v2y151<00/<03091m1<1g*v03091r1<2w1/0q1f1100+v06011t1600xv03091t1~00on0q101^005$0q181&00qf0q101$003=0q1c1u003=0q1a1t3[3=0q181x003=0q171u003=0q151$003=0q161p3[1/0q171p003=0q131x3[3=0q111x001/0q101z00$f020q0~1z3[mv1v1f1z00mv011f1£bgqf1v1a1u00"v0101181£7wi=1v131t00e<01131£3[3=210!1^7wqf1v1i1f00on1v161300qf011i1£001/2e0]1:007v0q0{1$1_5$2d0[0f5%3=0q0/1x3[3=210!1#001/0q0,1g007v0q1d1&007v0q0{1"7w3=0q1a1&001/0"0y1$003=0q0/1r3[x=011v1k1k00qf1v181300x=01011k1£00e<0q1c1&003=0q0,1e3[7v0q0{1"7w1/0q0/1w3[7v230£1:007v0q131&003=0"0-1z3[3=0q0{1&003=0"0-1^3[mv1v1a1300qf011m1£003=0q111&007v0"0y1%0up]1v1m1g3i3=0q101%3[4<0q111&001/0q0,1f1g2v0q131&2w7v230£1@003=0q0{1"3[3=0q101&003=0"0y1"3["v011v1o1p3[qf1v1c1300x=01011o1£00bf0q0~1&001/0q0,1e3[1/0q0{1&3[1/0q0{0_3[7v0q131&003=0"0y1x001/0q0{1&007v0"0-1x3[3=0q111&003=0q0{1^003=0"0!1q3[qf1v131d00qf1v1c1m00t<1v181k00qf01181£00qf1l131£00qf1l1c1£007v2m0+1<00bf0q151&7w3=0q0+1$001/0q0/1a3[7v230£1@003=0"0;1$3[3=0q171&3[3=0q151z001/0"0£1$001/0q0+1u3[x=011v151j00x=011v1a1m00x=011v1e1800x=0101151£00x=011l1e1£001/0q0/1m3[3=0q0:1!3[3=0q151&001/0q0+1t003=0"0£1^007v0"0;1^007v0"0;1$001/0q0+1s3[3=230£1{001/0q0/1q3[on1v151g00on1v1a1g00on1v1e1j00on01151£00on1l1a1£00on1l1e1£007v0"0%1&3[3=0q171$003=0"0%1£001/0q0+1f007v0"0#1z001/0q0}1^3[x=011v171s00x=011v1c1s00x=011v1g1k00x=0101171£00x=011l1c1£00x=011l1g1£001/0"0%1&001/0q0+1c3[3=0q0~1&001/0"0%1$003=0q0~1$3[mv0q171&007v0"0£1w001/0q0}1q003=2c0=1~003=0"0z1$00bf0q101&003=0"0u1u003=0"0v1!007v0"0w1$003=0"0w1v2w3=2g0'1+005$0"0x1$003=0q0@1$1g1f1l101£1g3=2g0'1#003=2g0'1^007v0"0x1z3[3=230£1[3[3=2g0'1]001/0"0z1£00e<0"0z1t007v0q0<1x3[3=2g0'1$3[3=2g0'1&007v0"0w1%1_2'0q0}1^1_3=2g0'1s3[2v010}1£003=0"0w1x002'0q0}1£2w3=2g0'1]001/0q1a1&005$0"0x1£0%3=0q0@1"1g3=2g0'1z003=0"0x1$3[5$230£1&005$2g0'1<003=0q1f1&1_1/2g0'1<1_3=2g0'1]007v210!1&003=0q1i1&003=2g0'1-3[7v230£1)007v2g0'1<007v0q191&003=0"0z1p00e<0q0<1k003=0"0$1j3[3=230£1,003=2c0=1#007v0q121&003=0"0&1o003=0"0*1x00bf0q141&007v0"0(1"003=0q0}1^003=0"0(1"002'0q0}1^2w3=2g0'1;003=0q0<1&005$0"0)1£0%1/0q0@1z1g3=2g0'1(007v0"0)1£1_1/0q0@1x1_3=230£1.002'0q141&003=2g0'1;003=0"0-1"1_5$0q161&001/0q0@1"1_3=2g0'1-003=0"0-1v003=0q0@1&001/0"0=1!003=2g0'1.007v0"0=1u007v0q0<1&3[3=2g0'1w3[3=230£1#007v0"0)1z3[3=230£1%3[7v01141£007v230£1,005<091o1<003=0"0%1&0:2'1v1o1!002'1l1o1£6!3=260^1<3[3=1v1m1^003=010~1£003=1l1m1£003=230£1,005$0q0~1&0[2<091m1<6[3=2a0)1<3s0k1l0~1£0k"v011v1a1x00"v011v1h1u00"v011v1j1!00e<010~1£00"v011l1h1£00"v011l1j1£00"v010q171&00"v010"0*1&00"v010q0}1&1wz<01091j1<dw1/2f0;1<1_1/2d0[1{1_3=2a0)1}3[1/2d0[1<1_5$2c0=1+1_3=210!1^3[1/2a0)1<001/2c0=1<1_1/260^1/001/280*1@1_3=260^1<3[3=1v1o1&003=01191£003=1l1o1£007v230£1)003=091o1<7w3=230£1,3[3=01131£003=2m0+1}003=0"0=1&1g2v1v1m1!002v1l1m1£002v091m1<6g3=230£1,3[+f031v1j1z00/<03010+1£00/<03010~1£00/<031l131£00zv02091j1<00(<010"0[1&bgbf0q131n001/0q1a1u001/0q1a1k3[1/0q1a10001/0q1c123[3=210!1&00qf0q1f1u003=0q1a1$003=0q1c1^003=0q1f1!3[3=210!1-001/0q1a0:001/0q1c10001/0q1f0(3[1/0q1a1m001/0q1c1j3[7v210!1^001/0q1c0~3[1/0q1a1k001/0q1c1f001/0q1f0}3[1/0q1a1£3[3=230£1)001/0"0#1t001/0q1a0-001/0q1c0y3[1/0q1a1u001/0q1f1i3[3=230£1$003=0"0#1!001/0q1c16007v2g0'1#007v0"0;1!001/0q1a1e001/0q1c19007v2g0'1_00bf0"0[1z001/0q1a1$3[3=0q1b1&001/0q1a0y001/0q1c0£001/0q1f0u001/0"0)1x001/0q1c11001/0q1a1g3[1/0q111&003=0"0)1$2#0}0q0<1&0:1/2d0[1<003=0q101s007v0"0*1u001/0q1a0=001/0q1c0-001/0q1f0&1_5$2a0)1<001/280*1<1_3=210!1%001/0q1c1k003=0"0%1$001/0q1f1w3[3=210!1%003=0"0£1u001/0q1a0;001/0q1c0=3[7v210!1s003=0"0!1x001/0q1f1x001/0q1a0%001/0q1c0%001/0q1a1w001/0q1c1w001/0q1f1r003=0"0!1z001/0q1a0f001/0q1f0o003=210!1n003=0"0x1t001/0q1c143[bf010/1£00bf010~1£00bf01101£00bf1l131£003=260^1<003=2e0]1_00bf0"0!1^00bf0q1c1&00bf0q1f1!1g9<1v1c1&009<1l1c1£009<091o1<a07v1v1e1"007v010+1£007v01121£007v1l151£007v230£1#007v2m0+1@007v091q1<007v0"0£1&007v0q1e1&007v0q1h1^0:4*1l1e1£6!1/2d0[1<1_3=2a0)1#3[1/2c0=1@1_7v280*1<1_1/2a0)1@1_3=260^1~7w+<021v0}1g00.f021v0_1i00;v02010%1£00;v02010_1£00;v021l0}1£00;v021l141£00mv2e0]1:00xv03091o1<00xv03091!1<00#v010q0%1900#v010q0=1700#v010q0_1c00#v010q101c00;v020"0s1&;h020e210!1'0f7v0"0s1^7w0200&-2(38396$6%6^6&0s0$0e091b0%0v0n1z0^0c0i1q0f0e0o1c0&0g0l1z0d04010/0j0p0m130*0(0h6*0d0c011r0)0g060@0f0-093a0w0=0q0s0x0y3a0z04010/0[0]0602070t04010s0$0e091b0%0v0n05070^0c0i1q0f0e0o1c0&0g0l02070d04010/0j0p0m130*0(0h050;0d0c011r0)0g060@0f0-09020b0w0=0q0s0x0y020b0z04010/0[0]063b3c3d6(6)2c143e3f6-3g3h010~2d050i2e1!02013i086=0<0m2f053j086[0_011s0~02151"011s021d036]3k3l010~2d050i2e1!02010!086;0<0m2f051£083m0_011s6'3n09026#3o156,3p026.3q010!086/3r0602016_3s096+2g0n053t3u0i6{1$0o3v2h0l023w2i6}3x011%086:1^0m2f05011s0~02151"013y3z6@3!066~6<1&03010~2d3"3£3$0'1£08700i2e1t1e3%1u0l3^3&3*3(3)713-0'3=3[3]72013;3'0m3#2j1d0373741*1(0h05013,060~020a151"0a013.083/2k0<06020a010!0875760_090#0n050i0,0o1!020a013_0#771d0378791*1(0h05010,060~020a151"0a011)163+2k0<06020a010!087a3{0_090#0n057b0+3}0i0,7c7d3:0o7e7f3@0l020a3~1f1-7g3<011)0r7h7i1=0m0#0h057j401=010,7k7l41067m7n4209020a1&437o441$153v7p1[020a4546474849010!087q7r1^06020a010~0#0n050i4a0o1!020a013_4b4c4d0h05010,060!1609020a151%2l020a4e03011s7s7t7u0u7v4f4g4h4i4j7w7x0r7y4k7z7!037"4l1e4m4n7£7$1]4o7%7^1g0{4p4q2m7&1;7*1'140u7(7)7-4r1#4s7=4t1;4u7[4v031,1.7]7;4w4x4y1h0"7'4z4!4"1/0r0k1_171i034£4$4%1h7#4^4&0u1+1,1.1{7,0k4*034(4)7.4-4=4[4]7/7_4;0"1j104'4#4,0r7+0k1'4.4/1u7{4_034+4{4}7}4:4@4~0u1#4<501h7:0k51031+1/0"1j10520r0k5317541i03555657581{7@591j0u105a5b0k5c035d1i5e5f5g5h0"7~5i5j101}0r0k1_175k031}025l7<0u5m5n5o5p5q5r0j1:0h5s805t5u5v5w5x5y2n5z0w5!0q1@1v031~5"5£5$811~5%0v5^055&0b0d0c011@5*5(5)2o0"5-0x0p5=5[5]5;0p5'5#5,5.5/0'820b0t5_0q5+5{5}5:5&1k0j5@0h5[0r2p5~1:0h1l0'830b0t0401841u1[1<5<60610585032q070z046286630j0y0l871;88891'8a140u8b4r1#4s4t1;4u8c8d4v031,1.8e8f4w4x4y1h0"8g4z4!4"1/0r0k1_171i034£4$4%1h8h4^4&0u1+1,1.1{8i0k4*034(4)8j4-4=4[4]8k8l4;0"1j104'4#4,0r8m0k1'4.4/1u8n4_034+4{4}8o4:4@4~0u1#4<501h8p0k51031+1/0"1j10520r0k5317541i03555657581{8q591j0u105a5b0k5c035d1i5e5f5g5h0"8r5i5j101}0r0k1_175k031}025l8s0u5m5n5o5p5q5r0j1:0h5s8t5t5u5v5w5x5y2n5z0w5!0q1@1v031~5"5£5$2r1~5%0v5^058u0b0d0c011@5*5(5)2n0"5-0x0p5=2r5]5;0p5'5#5,5.5/0'8v0b0t5_0q5+5{5}5:2o1k0j5@0h8w0r2p5~1:0h0k2c8x0b0t0401171[1<5<6061052o032q070z04622r630j0y0l8y3839070t04010s0$0e091b0%0v0n1z0^0c0i8z1w0f0e0o8!1x0&0g0l1z0d04018"8£8$0j0p0m130*0(0h8%0;0d0c018^180)0g060@0f0-098&0b0w0=0q0s0x0y8*0b0z04010/0[0]06022s070t04018(110$0e098)1m0%0v0n2t8-0'44070^0c0i1q0f0e0o8=1x0&0g0l058[070d04011t1e8]0£0j0p0m130*0(0h2u2v0'480;0d0c018;8'8#8,180)0g060@0f0-09058.0b0w0=0q2u2v8/110x0y1g0'0{8_0b0z04011g0{0£0[0]063b3c3d8+8{2c143e3f8}3g3h070t04010s0$0e091b0%0v0n05070^0c0i1q0f0e0o1c0&0g0l02070d04013i088:0<0£0j0p0m130*0(0h053j088@0_0;0d0c011r0)0g060@0f0-09020b0w0=0q0s0x0y020b0z04010/0[0]06021d038~3k3l070t04010s0$0e091b0%0v0n05070^0c0i1q0f0e0o1c0&0g0l02070d04010!083+0<0£0j0p0m130*0(0h051£083m0_0;0d0c011r0)0g068<3n2w0f0-0902903o0b0w0=0q913p110x0y02923q0b0z04010!08933r0£0[0]0602070t0401943s110$0e09952g1m0%0v0n05963u070^0c0i971w0f0e0o98992h1x0&0g0l023w2i473x070d04011%089a1^0£0j0p0m130*0(0h050;0d0c011r0)0g060@0f0-09020b0w0=0q0s0x0y020b0z04013y3z3!0£0[0]069b9c1&039d070t04010s0$0e091b0%0v0n3"3£3$0'1£08070^0c0i9e9f0f0e0o1t1e3%1u1x0&0g0l3^3&3*3(3)9g3-0'3=3[3]9h070d04013;3'0£0j0p0m3#1d039i1*1(1k0*0(0h050;0d0c013,180)0g060@0f0-09020a0b0w0=0q0s0x0y020a0b0z04013.08120<0£0[0]06020a070t04010!089j0_110$0e090#1m0%0v0n05070^0c0i0,1w0f0e0o1c0&0g0l020a070d04010/0j0p0m0#1d039k1*1(1k0*0(0h050;0d0c010,180)0g060@0f0-09020a0b0w0=0q0s0x0y020a0b0z04011)162k0<0£0[0]06020a070t04010!083{0_110$0e090#1m0%0v0n059l3}070^0c0i0,9m3:1w0f0e0o9n3@1x0&0g0l020a3~1f9o3<070d04011)0r9p1=0£0j0p0m0#1k0*0(0h05401=0;0d0c010,9q41180)0g069r422w0f0-09020a1&439s1$0b0w0=0q9t1[110x0y020a45469u490b0z04010!089v1^0£0[0]06020a070t04010s0$0e090#1m0%0v0n05070^0c0i4a1w0f0e0o1c0&0g0l020a070d04010/0j0p0m4b4c4d1k0*0(0h050;0d0c010,180)0g060!162w0f0-09020a0b0w0=0q1%2l110x0y020a4e030b0z04010/0[0]069w9x640u4f4g4h4i4j9y652j0r4k9z2x034l1e4m4n9!9"1]4o9£1g0{4p4q2m9$9%9^9&20669*9(9)9-219=0k9[679]9;9'9#9,9.9/229_689+9{9}1n69216a9:9@9~9<236ba01-236ca1a220a3a46aa5a6a73/1n2ya8a9aa67abacadae191-afag22ah68aiajakal3t1naman2z24aoapaq232!2y1-6d6ear6casatauavawaxay20az6f19a!1n6g2qa"a£a$19a%a^a&a*a(a)a-a=65a[222!6fa]2"19a;a'a#1n2£a,192za.2519232sa/a_a+12a{a}a:a@a~a<b0202$b11yb22"6h1n0+b3b42z2%b51y6i1$2"b6b7b8b9babbbc222^bdbebf2t0+bgbhbibjbk2t081y1lblbm2ubn1l2mbo1g1vbp2&262*2764032(bq6h6j2)2-280.2^br6k2=bs080+btbu2[2]2;bvbw032^0}2'2#0:bx0+by6lbz0.2(0}1a1o0:6m0"0+2y6nb!030}1a1o0:292%666l6d0.2a2,2.2b2/2_16b"2+2{2}2:2@6m036ob£b$b%2~1l0.12b^2l2s2&262*276p036eb&b*b(12b)2)2-280.0+b-b=2=b[1fb]b;2[2]2;b'6qb#032~0}2'2#0:6p0+b,6nb.b/2(0}1a1o0:1fb_212<b+b{b}b:0}1a1o0:b@2%212<b~b<c02,2.2b2/1fc12+2{2}2:2@036oc21t1e12c3c41]c5c6c71g28080{c82&262*271403c9cacb6j2)2-280.cccd2=ce16cfcg2[2]2;ch6qci03240}2'2#0:292£cjckcl0.cm0}1a1o0:cn1fcocpcqcr030}1a1o0:292£cs2<1l0.ct2,2.2b2/29166rcu2+2{2}2:2@cv0312cwcxcy6rcz0.12c!c"2_2i2~c£27c$1403c%2ac^6bc&c*c(0{c)c-1a6sc=c[2j086g2gc]c;c'2vc#c,c.c/c_c+c{302x03c}c:c@c~c<d0d1d2d3d40{d5d6d7d8d90r0{da6sdbdcdd1403de0_24df31dg2b1vdh08di1ydjdkdldm31dndodpdq302x03drdsdtdu1p326tdv3334dwdx6udydzd!d"d£d$d%d^d&d*d(341l316v350;d)6wd-1<d=d[d]d;1p32d'1]0.080+d#d,d.1md/1pd_d+2_0"2$d{6xd}6u0kd:0312d@6y33186zd~d<6!36e0032$e1e21p0be3e4e5e66i6v35326ze76we81<25e9332peaeb373507ecedeeefegeheiejekel2!6yem34361yen371peoep6keqeres6"et19eu371pev25ewex6"6t242heyeze!25e"e£e$1te%69e^6xe&6!e*e(e)e-e=1ve[080{6£e]6£e;e'e#e,e.e/e_26e+e{e}e:0ue@2ae~2ae<f0f1f2f3f4f5f6f7360uf8f9fafbfcfd30fe03fffgfhfifjfkflfmfn
    0106Ondine^"01000}011g0g000}011d0g000}011e0x0:0}01190g0:0}011b0x000}011h0x0:0}011j0x0:0}011h0g000}01190x000}01150x0:0}011i0x000}011b0x000}011i0x0:0}01140g0:0}01120x0:0}011f0x0:0}01140x000}01180g000}011b0g000}01180x0:0}011i0g0:0}01190x000}01140x0:0}011g0x0:0}011c0x0:0}011k0x000}011g0x0:0}011d0g0:0}00170x000}011h0g0:0}011c0g0%0}01110g0:0}011a0g0:0}011d0x000}011f0x000}011n0x000$010<0g0%0$01160g0k0}010<0g0k0$01120g000}001b0x000}01190g000}011c0x0%0$01110g0k0}010@0g0k0$01160g0%0}010{0g0:0}001d0x0:0}010@0g000}011j0x0:0}011h0x000_01160x000_010<0]0:0_01150]0:0}011o0x000}01160x0:1f010+0]0:0}010,0g000}010+0g0:0}010_0g000}01110g000}01140g0:0}01110g000}01150g0:3=01160]000}011d0x000}011s0x000_011f0g0%0$011h0x000}011r0x0:0}01150]0k0}011h0]0:0}011h0]000}011h0]0:0}001b0x0:3=01190]0:0}01100x0:0_011b0g0:0_01140g000_01160g000_01190g000_011d0g000_011f0x0:0_011b0x000_011f0]000_011b0]0:0}010_0x000_01140x000$011b0g0t0}011h0x0:0_011b0]000_01130]0:0}01180x0:0}010<0x0%1f01130]0$0_011t0]0:0}000~0x0:0_011j0x0:3=01140]0:0_01140x000_01190x000_011d0x0:0_01140]000_01190]000_011d0]0:1_010+0]000}010<0x0:0}010{0x0%0$011l0x0%0$011p0x0:0}011c0]000}001o10000}001i1i000}001f1q003[011b0g0:0}010]0g0:3=01140o0:bf01190]0:3=011l0]0:0}01170x000_01160]0:0}010{0"000}01120x0:0}010:0x000}01100x0:0}010#0x0:0}01130x0:0}010/0x0:0}011s0x0u0t011e0x0u0t011l0x0u0t011o0x0u0t011q0x0u0t011u0x003=011k0]0:0}01100]0:0}011d0]0:0}001p0*0:0}01121g000}010~1g0:1/010;1g0:1/010.1g000}01121g0:0}010~1g0"0!010/0g0"0!010[0g0"0!010*0g0:0}001p0x0:0}001j0x000}001n0x000}001a0x0:0}011g0g000}011l0g000}011p0g000}011i0g000}011a0g0:0}011a0z0:7v011d0]000}011k0x0:1/011b0x001/011h0x003=011g0]00bf011i0]0:3=010@0]007v01160]0:0}010]0x003=01120]003=010<0]000}010{0x000}01130x0%0$011j0x0:0_011g0x0"0!011i0x000}011c0]0k1f010@0]0%0}01190]0e1r011i0]0x0_011t0]0k1f010<0]0l1y011f0]000}001y0x003=010(0x003=010_0x007v010]0x007v010,0x000}001!0z0:0}001v0£000}001y0£0:0}001u0%000}001x0%000}001v0*003=010-0*003=010{0*0:0}001u0-000}001x0-0:0}001p0[000}001v0[0:0}001p0'000}001u0'0:0}001o0.000}001r0.007v010#0.007v010/0.0:0}001q0_000}001v0_0:0}001o0}000}001r0}0:0}001n0@000}001q0@0:0}001j100:0}001n13000}001q130:0}001j15000}001o150:0}001i18000}001n180:0}001f1b000}001j1b0:0}001i1d000}001n1d0:0}001f1g000}001j1g0:0}001e1i0:0}001c1l000}001f1l0:0}001e1o000}001i1o0:0}001c1q000_001e1t003=01101<003=010,0]0:1/010&1g0:0}010_1g0:0}01141g003=011b0g0:0}001c0x0:7v011b0o0:bf01170o0:3=01170o0:3=01190o0:7v01180o0:3=01160o000}011i0%0:0}011a0&000}011g0&0:0}011a0(000}011g0(0:0}011a0=0:0}011k0*0:0}011a0$000}011g0z000}011i0z0:0:011b0]0:0:011b0x0:7v011l0]0:3=011q0]0:0}011e0x0:1/011e0x0:3=011p0]001/011e0x000}01170x0:7v011b0]0v6<011n0]0:0}011t0x0:0}011p0x0:bf01170]0va=011j0]0:0}01150x0:0}01110x000}011t0x0v1p011g0]0t0}011p0x0:1.011g0x0:3=01170]0v3f011j0]0v3f011l0]0t0}01110x0:0}011e0q0:0}01140"0:0}01160£0:0}01140^003=011c0]0:0}01100!0:0}01100=0:0}01100+0y0x01140~003=01191e0:0_01140.004<011i0g004<011n0g0$0"010!0g0£0"010^0g0£0"010*0g0£0"010/0g0£0"010:0g0$0"01110g003=011i0]000_011f0@000}0116130:0:010+0]0:2#010+0]0y0x01100:0:0}010(0x0:3=01120]0:3=01100]0:3=010<0]0:1_01120]000001120x0:0:01120x0:3=01110]0:7v010<0]000}011o0x003=011e0]007v011i0]0:0}010'0x003=011b0]0:0}010&0x0:0}010@0x0:0}010_0!0:0}01100$000}010/0x000$011f0x000$011h0x0%3=011b0]000$011r0x0%0"011j0x0%0$011n0x0[0=011l0x000}01100*007v011m0]0:bf01160]0:3=01130]001_011f0]0:1/011f0x001q011i0]0u0t011c0x0u2l011i0x0u3=01180]000t011x0x0u0t011i0x0u0r011c0x0%0$011q0x0%0$011u0x0%0$011r0x0"0!011l0x0%0$011c0x0%0$011a0x0%0$01160x0%3=010#0]000}011p0]0:0}011l0]000}011o0]002#011h190:1/01160]0d1^01190]0k1f010~0]0%0}011a0]0%1f01170]0:1/01170]0l1y011j0]0%0}011f0]0:1/011b0]0:1/01150]0,0#010}1w0,0#01171w00bf010=0.00bf010}0.003z010]1l003z010@1l0:0_00191t0:1_001c1<000u010*1w007v010,1w007v010/1w007v010}1w0u0t00111t016^010*1s0t0t00131p0u0t00171l0u1/001c1h0u0t001f1d0u0t001j190u0t001o150u1_001m11003z010~110u0t001j0@0u0t001a0+0u0t001j0,0u0u001m0]0u1p001m0)0u0t001v0^0u0r001y0"0u0}001v0x000t010"0x0u0}001x0z000}001w0]003=01110]007v010_0]007v010:0]000}001y0;0:0}001q0#000}001v0#0:0}001p0.000}001w0.0:0}001o0_000}001s0_003=010/0_003=01130_0:0}001n0{000}001u0{0:0}001m0:000}001r0:0:0}001l0~000}001s0~0:0}001k10007v010:10007v0111100:0}001j12000}001p120:0}001i14000}001l140:0}001h16000}001m160:0}001g18000}001j180:0}001f1a000}001l1a0:0}001e1c000}001g1c0:0}001d1e000}001j1e0:0}001c1g000}001f1g0:0}001b1i0:0}001a1k000}001d1k0:0}00191m000}001g1m000}001c1o1g1f010(0]000$01161[0%0$011l1[0%0$011f1!0:1/010~1g000}011a1f0"0!010:0g0"0!010!0g00mv010}0x00ak010<0x00bf01120]0:1_000<0x0:0}00110x0:0:000<0x0:5%000<0x007v010_0x007v010:0x0:0}00100x003=01140]000p010(0x0qs4010(0x0:0}00170"000}001b0"0:0}001j0*000}001n0*3[3=01150x3[3=011a0x3[3=01190x0%0$011l1^000$011r1^000#011r1[000#011o1[0,0#011c1[000#011k1[000#011f1[000#011c1[0,0#01101[000#01181[000#01131[000#01101[0:3=011b0o0:0:01190o0:0:01190g0:1/01190g0:3=011g0o0:3=011d0o0:0_011i0g0:i=01180o0:3=01110o0:7v01110o0:0}011i0i0:0}011a0k000}011d0k000}011g0k0:0}011i0m0:0}011a0o000}011d0o000}011g0o0:0}011a0r000}011d0r000}011g0r0:0}011i0t0:3=01140-000}011a0v000}011d0v000}011g0v0:0}011i0z0:0}011a0£000}011d0£000}011g0£0:3=01160:000}011d0&000}011d0(0:0}011i0-0:i=011d19000}011a0]000}011g0]000}011i0]0:0}011k0]0:0}011k0[000}011g0=000}011i0=0:0}011k0=0:0}011a0-000}011g0-000}011i0-0:0}011a0)000}011g0)000}011i0)0:0}011k0)000}011i0(000}011i0&0:0}011k0^0:0}011a0^000}011g0^000}011i0^0:0}011a0%000}011g0%0:0}011k0$000}011g0$000}011i0$0:0}011k0£0:0}011k0"0:0}011a0"000}011g0"000}011i0"0:3=011d0.000}011k0!0:0_011k0y0:7v011e0]0:3=011h0]0:bf011n0]0:7v011n0]0:3=011n0]0:0:011j0]0:2'011j0x0:0_01190x000_011e0x000_011h0x0:0_011h0x003=011c0o0v3f011g0o0t0}01100h032=011n0p0+0}01120i0:0}01140j0:0}01160k003=011l0u0:0}01190l0:0}011c0n0:0}011e0o0:7v011g0"0:0}011c0r0:0}01190s0:0}01160u0:0}01140v0:0}01120w0:0}010@0y003=011i0'0:0}01120!0:0}011c0$003=011j0{0:0}01160%0:0_01120*0:e<010{0(002*01180(003e011c0(007w011g0(00ef011k0(0y0x010:0(0z0x01140)0y0x01100-0y0x01140-0y2@01180=0z3&011c0[0y0$010<19000$011b190%0$01100]0%0$01140[0%0%01180=0%2w01180-0%1g011c0)0%6=011g0(0%5%011c0*0%0%01180&0%3[01180^0%0$01140^0%0$01100%0%0$010:0$0%0$01100£0%0$01140"0%1701180!0%1g011c0z0000011c0z0%0%011g0y0000011g0y0%0}010_0x003=011n0]0:0}010{0y0:0}010@0z003=011l0/0:0}01190$0:0}011c0%0:7v011g0@0:0}011c0&0:0}01190(0:0}01160)0:0}01140-0:0}010@0[0:0}010{0]0:0}010_0;003=011i1b0:0}010{0'0:0}010@0#0:0}01100.0:0}01170/003=011j1i0:0}01140_0:0_010@0{0:e<010#0}002*01180}003e011c0}007w011g0}00ef011k0}0y0x010_0:0z0x010{0:0y0x01100@0y2@01180~0z3&011c0<0y0$010<1w000$011b1w0%0$0110100%0$01140<0%0%01180~0%2w01180@0%1g011c0:0%6=011g0}0%5%011c0}0%0%01180{0%3[01180+0%0$01140_0%0$01100/0%0$010:0.0%0$01100.0%0$01140,0%1701180#0%0$011c0'0%0"011g0;0%0_010]0]003=011b190v3f011g190t0_010.0]032=011n1b0+0_010_0;0:0_010{0'0:0_01100#003=011l1e0:0_01120,0:0_01160/0:77011c0_007v011g1k0[0(011e0+0[0(01190{0[0(01140}0[0(01120}0[0_01100:0:0_010{0@0:0_010_0~0:0_010.0<0:0(010]10003=01161w003=011i1w0[0(010.110[0(010_120[0(010{120[0(0110130[0(011414003=01171£003=011j1£0[0(0110150[0(010{150[0(010_160[0(010.170[0_010-18007v011k18003=011g18003=011s180:0_010#190:0_010_1a0:0_010:1b0:0_010:1c003=011c1c003=011o1c0:0_01101d0:0_01141e0:0_01181f0:0_011b1g003[01181g007v011c1g007v011k1g0:0_011g1c0:0_011b180:0_0116140:3=0118100:0_01140:0:0_01100_0:0_010:0#0:0"010<0[007v011g0[002v01190[002v011l0[0%0"010@0-0%0"010{0*0%0"010_0%0%0"010@0£002v011b0£002v011n0£0%0"010{0z0%0"010_0w0%0"010#0u0%0"010_0r002n011c0r002n011o0r0%0"010#0o0%0"010]0m0%0"010-0j0%0"010w0g004<011u0g0£0"010y0g0£0"010"0g0$0"010$0g0$0"010(0g0£0"010-0g0d4<011g0g004<011p0g004<011s0g0q0"010[0g0£0"010]0g0£0"010'0g0$0"010,0g0$0"010_0g0£0"010{0g0q3'01180g004=011b0g004=011f0g004=011k0g0d0"010@0g0£0"010<0g0£0"01130g0£0"01140g0$0"01160g0£0:01180g0$0z01190g0£0}01140g00mv010<0g00e<011i0o060,01160g060=01190g060^011d0g0&0_011b0g0:0_01130g000_01150g000_011c0g003=011h0o0:0_01190o000_011e0o0:0_01190w000_011e0w0:0_01130%000_01150%000_011c0%0:0_011c0]000_011h0]003=011k190:0_01160)000_01180)000_011f0)0:0_01160^000_01180^000_011f0^0:0_011c0"000_011h0"00mv010<0x060,01160x060=01190x060^011d0x0&0_011b0x0:0_01140!000_01160!000_01190!000_011d0!0:0_01140%000_01160%000_01190%000_011d0%0:0_011b0(000_011f0(0:0_01130[000_01150[000_011c0[003=011h180:0_01190#000_011e0#0:0_01190_000_011e0_0:0_01130:000_01150:000_011c0:0:0_011c10000_011i10003=011l1w0:0_01160@000_01190@0:0_01160+000_01190+000_011f0+0:0_011c0,000_011i0,0:0}01140]00mv010<0]00bf011i19060,01160]060=01190]060^011d0]0&0_011b0]003[011619007v011i190:0_01140'000_011d0'000_011d0.0:0_011b0_000_011f0_0:0_01140}002#01160}000_01190}000_011d0}0:0_011b0@0:0_011b10000_011f100:0_0114130:0_011915000_011f15003=011d15003=011i15003=011p150:0_011418000_0116180:0_01141a000_01161a0:0_01191d000_011f1d0:0&010:1g004<011d1g004i011e1g004<011i1g004<011p1g0-0&010<1f0)0&01121e0-0&01161c0-0&01181b0-0&011b190)0)011e180-0&011i16004<011n160-0&011k150)0&011i130-0&011e120-0&011b100-0&01180<0)0&01160@0-0&01120:004=01160:004=011b0:004=011e0:004=011i0:0-0&010<0{0)0&010:0+0-0&010{0/0-0&010.0.0-0&010'0#0)0&010[0'0-0_010<0]002#01130]00mv010^0]00000113190vl<010[0]000t011b190t0_01150]000:011b0]031,010+0]006v011f190+0_01150]001_011b0]001_01130]002#011b0]000:01130]001/01130]000{011b0]007v011f190:0:010+0;000_010<0;000_01130;0:1.010+0'000_010<0'000_01130'0:0_01150#000_011b0#0:0_01150.000_011b0.0:0_010+0/000_010<0/000_01130/0:0_010+0_000_010<0_000_01130_0:0_01150+000_011b0+0:0_01150}000_011b0}000_011e0}003=011h1o0:0_010+0:000_010<0:000_01120:0:0_010+0@000_010<0@000_01120@0:0_01150~000_011b0~000_011e0~0:0x010-10003e01181w003=011c1w003=011k1w0y0x010#100z0x010_100y0x010:0<0y0x01100<0z0x01180~0y0x011c0@007v011i1r0y0x01180@0z0x01140@0y0x010:0}0z0x010_0}0y0x010#0{0y0x010_0{0z0x010:0+0y0x01100+0y0x01140+0y0x01180_0z0x011c0_0y0x01180/003=011g1i0y0x01140/0z0x01100.0y0x01100.0y0x010:0,0y0x010_0,0z0v010#0,0y0}010=0#002#010@1e003=01151e0:0}010.0'0:0}010+0'0:0}010@0;0:bf01120]00000112190:0}010<0[0:0}010@0=0:0}010+0=0:0}010.0-0:0}010]0)0:0}010=0(0:0}010&0(0:0}010z0*0:0}010=0&0:0}010'0^0:0}010.0%0:1_010:0%003=01140:0:0}010<0$0:1*010:0£0:0}010.0!0:0}010'0z0:0_010[0y000}010}0x0:0}010'0v000}01100v0:g4010_0t000}010<0t0:f8010:0r000}010<0r0:0}011c0p0:0}01140n000}01180n000}011b0n0:0}01140l000}01180l000}011b0l0:0}011c0j0:7v01160]0:bf010<0]0:bf010@0]0:3=010}0]0:0_011c0x0:2#011c0]0:0_010(0x00bf010<0]00bf011b0]000001140x003=010@0]003=01190]003=01100]0:0_010]0x0:0$010&0x0038010@0]005%01190]0%0$010]0y0%0$010#0z0%0$010/0"0%0$010+0£0%4n010@0$0%0$01100^0%0$01130&0%0$01150*0%1/01190)0%0$011c0-0%0$011f0=0%0!011h0]003=010}19003=0117190"0!011f0[0"0!011c0=0"0!01190-0"0!01150)0"0!01130*0"0!01100&0i1s010@0@003=01190@0i0!01130^0"0!01100%0"2j010@0£0"0!010+0"0"0!010#0!0"0y010]0z0"0}010&0x0:0}010]0y000}01160y0:0}010#0z000}01140z000}01140!000:010@0/003=01190/000}01160"0:2'010@0£000}01140£000}01140$0:0}01120%000}01160%000:01120@003=011e0@000001140^0:2'01120&000}01160&0:0}01100*000}01140*0:0}010@0(000}01140(0:0}010{0)003=011013003=011c13000}01160)0:0}010_0-000}01140-0:0}010#0=000}01140=0:0_010]0[000}01160[0:0$010&0]007v010<19007v011b190%0$010]0]0%0$010#0[0%0$010/0=0%0$010+0=0%0$010@0-0%0$01100)0%0$01130)0%0$01150(0%0$01190*0%0$011c0*0%0$011f0&0%0!011h0^003=010@0@001=01190@0"0!011f0^0"0!011c0%0"2001190%0"0!01150$0"0!01130£0"0!01100£0i3=010}0/003=01170/0i0!01130"0"0!01100"0"0!010@0!0"0!010+0z0"0!010#0z0"0y010]0y0"1/010$0x0:0}010}0x0:1/010-0x0:1/010'0x0:1/010/0x0:1/010{0x0:1/010<0x0:0}01160x0:1/01130x0:3z011f0x0%7v011d0]0%3=011d0]0:3=011b0]0:3=011i0]0%0$011k0x0%0$011o0x0%3=011f0]000=011u0x0[0=011r0x0[0=011p0x0[0(011i0x0[7v011d0]0y0x011e0x0z0x011f0x0y0x011g0x0y0x011h0x0y0x011i0x0z0x011l0x0y0=011p0x0[0=011o0x0[0=011i0x0[0=011f0x0[3=011b0]0[0=011d0x0[0=01190x0[0=01130x0[0=01110x0[3=01160]000=010<0x0[0=010@0x0[0=010{0x0[0=010/0x0[0(010,0x0[3=010*0o00mv010!0g000}010#0g000}010/0g0:0}010_0h0:0}010/0i0:0}010/0k0:3=010(0v000}01100l000}01130l0:0}010/0m0:0}010/0o0:0}010_0p0:bf010-0%000}010#0r000}010/0r0:0}010_0s0:0}010/0t0:0}010/0v0:0}01100w000}01130w0:0}010/0z0:0}010#0£000}010/0£0:0}010_0$0:0}010/0%0:0}010/0&0:3=010[10000}01130*0:0}010/0(0:0}010/0-0:0_010_0=0:3=010'19007v010&0]000=010<0]0[0=010#0[0[0=010.0-0[0=010_0)0[0=010{0*0[3=010]0@000=010@0^0[0=01100%0[0=01120£0[0=01140"0[0(01160z0[mv010!0x00mv010*0x000}010#0x0:3=010#0x0:3=010/0x0:3=01100x0:3=01130x0:3z011c0x0:7v011a0]0u7v011a0]0u3=011a0]003=011m0]0:3=01180]0:3=011f0]0038011r0]0%0$011m0x0%3=011c0]003=011o0]000$011v0x0%0$011y0x0%7v011a0]006}011m0]000!011$0x0"0!011y0x0"0!011u0x0"0!011r0x0"0!011q0x0!0!011e0x0"0!011f0x0"0!011m0x0"3=01180]0%0$011i0x0%0$011f0x0%3=01130]003=011f0]0%0$01100x0%0"010~0x00mv010x0x000}010@0x0vl<010)0x0t0}01110y0:0}01100z0:3=010,0+000}01190£000}011c0£0:0}01100%0:0}01110&0:bf010/10000}010@0*0:0}01110(0:0}01100)0:0}01190[000}011c0[0:0}01100'0:0}01110#0:0}010@0,000}01100,0:0}01110.0:0}01100_0:3=010+1n000}01190{000}011c0{0:0}01100:0:0}01100@0:0_01110~0:3=010:1w007v010)10007v010]10007v010'10006_010/10000=0118100[0=010@0<0[0=010<0@0[0=01110:0[0=01130{0[3=010{1l000$01160+0%0$01130_0%0$01110.0%0$010<0,0%0$010@0#0%0$010/0'00mv010x0]000}010@0]000}01100]0vl<010)0]0t0}01110]000}011d0]0:0}01190]000}01190]0:3=01150]000001190]0:1_011c0]0:1*011c0]0:0_01190]0:3=011f19003=011d190:3=011c190k1_011h0]0:1]011d0]0:0:011h0]001/011h0]003=011f190:3=011a1900bf011a190:1]01150]0:3=011819001_011d190%1/011d0]0:3=011b19007v011a190k1f01120]0%0}011e0]0%1f01150]0:1]01120]0l1y011e0]003=0118190:0}01130]0:3=0116190:1/01190]0d1^011b0]0:1f010)0]000#010+0]0,0#010@0#0r1f010]0.0r0#01100/0,1f010{0}000#01150}0,0#01190~0r1f010@100r0#011c120,1f011615000#011h150,0#011l190r1f01191a0r0#011o1c0,0}011i1g003=011h1g003=011o1g003=011t1g0:0}011f1h0:0}01191i0:0}01161j0:0=01131k003=011f1k003=011r1k0[0=010@1k0[0=010{1l0[0=010/1m0[0=010#1n0[0=010)1o003=011d1o003=011p1o0[0=010]1o0[0=010/1p0[0=010{1q0[0=010@1r0[0=01101s003=011c1s003=011o1s0[0=010@1s0[0=010{1t0[0=010/1u0[0(010]1v0[0#010*1w007v011h1w007v011m1w007v011t1w0,0#010;1w0.0#010/1w0,0#010~1w0.0#01131w0,0#011a1w0.0#011f1w0,0#011j1w000,011f1w003=011r1w0,2{011f1w0.0#011a1w0,0#01131w0r3z011a1w003z011m1w0r0#010~1w0,0#010/1w0.0]010;1w0,q3010"1g000n010~1g0o0n01111c0o0n0117170o0n011a120o0n011d0~0o0n011j0+0o0n011m0#0o0n011p0[0o0n011v0*0o0l011y0£0o0}001v0x0:0}001x0z0um0010"0y0uk{010"0y003=010=0.003=010}0.003=010]10003=010@10003=010'1b003=010<1b007v010/1b007v010}1b003z010#1l003z01101l0:0_00171t0:0x00111w00o}010y1w0y0x00141q0z0x00181j0y0x001d1c0y0x001g160y0x001k0<0z0v001p0_0y0}001s0]0:0}001r0;00bf010_1000bf0114100:0}00181o003=010{1o003=01161o0:0}001b1q0:0}00181s000}001d1s0:0_00141u000_001b1u0:1_00191<000u010%1w003=010_1<003=010@1<0u0t000~1u016^010%1t0t0t00121r0u0t00141o0u1/00191l0u0t001a1i0u0t001e1f0u0t001l1c0u1_001j19003z010~19003z011119000u011719003z010}190u350017160u0t001a130u0t001e100u1/001j0@0u0t001m0{0u0t001q0/0u0r001v0#0u0}001s0]000t010y0]0uk{010y0]0u0}001r0;003=010_10003=011410003=010{18003=011618003=010:1g003=01181g007v01111g006!01141g0:0}00171o003z010~1o002#011a1o0:0}00161q0:0}00151s000}00191s0:0}00141u000_001a1u0:38010'1<003=011b1<0%0$01141p0%1f010(1h000$010<1h0%0$010<190%1f010$11000$010_110%0$010'0+0%1f010w0]0k3q010[0]0m1.010(0]0k2[010^0]0i1f010$0]1g1f010'0]003z010*0]0077010[0]003z010/0]1g1f010$0;1g1f010w0'002w010(0'003z010_0'1g1f010$0#1g1f010(0,1g1f010'0.003z010-0.0077010_0.003z010{0.1g1f010(0/1g1f010$0_1g1f010w0+003z010[0+003z010:0+1g1f010$0{1g1f010(0}1g1f010u0:003z010]0:0077010.0:0077010+0:003z010@0:1g1f010"0@1g1f010&0~1g1f010]0<003z010'0<003z010<0<1g1f010&101g1f010"111g1f010u12003z010,120077010+120077010@12003z0111121g1f010"131g1f010&141g1f010]15003z010.15003z0112151g1f010&161g1f010"161g1f010u17003z010_170077010@170077011217003z0114171g1f010"181g1f010&191g1f010]1a003z010+1a003z01151a1g1f010&1b1g1b010"1c1g1f010s1d003=010}1d007v01101d007v01131d003=01171d1g1f010%1e1g1f010=1f1g1f010#1g001f010}1g003=010@1g003=01191g1g1f010=1h1g1f010%1i1g1f010s1j003=010<1j007v01131j007v01171j003=011b1j1g1f010%1k1g1f010=1l1g1f010#1m001f010}1m003=01101m003=011c1m1g1f010=1n1g1f010%1o1g1f010s1p003=01121p007v01171p007v011c1p003=011e1p1g1f010%1q1g1f010=1r1g1f010#1r001f010}1r003=01131r003=011f1r1g1f010=1s1g1b010%1t1g1f010p1u003=01141u003=01171u003=011d1u003=011g1u1g1f010"1v1g1f010"1w1g1f010]1x003=01161x003=01191x003=011d1x003=011i1x1g1f010]1y1g1b010@1z1g1f010'1!001f010_1!001f010}1!003=01171!003=011b1!003=011g1!003=011j1!1g1f010]1"1g1f010"1£1g1f010]1$003=01191$003=011d1$003=011g1$003=011l1$1g1f010]1%1g1f010@1^1g1f010,1&001f010}1&001f010<1&003=011b1&003=011g1&003=011j1&003=011n1&1g1f010"1*1g1f010]1(1g1f010_1)001f010@1)001f01111)003z011d1)003z011g1)003z011l1)003z011p1)1g1f010]1-1g1b010"1=1g0$010n1[001$011l1[0y0x011x1[060$010z1[0t0x011q1[0b0$010&1[0n0y011l1[0h0$010;1[0h1£011l1[0n0$010.1[0b0x011e1[0t0$010~1[060x01191[0y0x01101[002w011j1[0y0x010:1[060$011e1[0t0x010.1[0b0$01171[0n0x010;1[0h0$011e1[0h0x010£1[0n1f011j1[0b0x010£1[0t0$011v1[060x010q1[0y0=010v1[001$011h1[0y0x011t1[0e0=010*1[0l0x011m1[0r0=010;1[070y011h1[0y1£011h1[070=010{1[0r0x011a1[0l0=010~1[0e0x01151[0y0=010:1[002w011f1[0%0$011a1[080=010_1[0w0$01131[0g0=010;1[0o0$011a1[0o0=010-1[0g1f011f1[0w0=010y1[080$011r1[0%0=010$1[001$011d1[0y0x011p1[0e0=010-1[0l0x011i1[0r0=010'1[070y011d1[0y2/011d1[070=010.1[0r0x01161[0l0=010{1[0e0x01111[0y0$01121[000$01111[0%0$010{1[0%0$010.1[001g011d1[0%0$010'1[0%0$010-1[001f011d1[0%0$010$1[000$011i1[0%0=010&1[003=011n1[0%0$011i1[080=010]1[0w0$011b1[0g0=010.1[0o0$011b1[0o0=010{1[0g0$01161[0w0=01101[080$01141[0%0=01131[003z011i1[0%0"011f1[080=01101[0w0"011c1[0g0=010{1[0o0"01161[0o0=010.1[0g0"01131[0w0(010&1[080"01101[0%0=010z1[003=01191[080=010&1[0w0$011e1=0g0=010;1=0o0$011a1-0o0=010.1-0g0$01121-0w0=010~1)080$011e1)0%0=01101(003=01171(0%0$011j1(080=010:1(0w0$011e1*0g0=010.1*0o0$011a1&0o0=010;1&0g0$01121&0w0=010£1^080$011e1^0%0=010*1%003=01151%0%0$011h1%080=010;1%0w0$011a1$0g0=010{1$0o0$01161£0o0=010;1£0g0$010~1£0w0=010{1"080$011a1"0%0=010:1!003=01131!080=010_1!0w0$011a1z0g0=010;1z0o0$01161y0o0=010-1y0g0$010~1y0w0=010y1x080$011a1x0%0=010$1w003[01111w0%0$011d1w080=010-1w0w0$01161v0g0=010.1v0o0$01121u0o0=010-1u0g0$010{1u0w0=010.1t080$01161t0%0=010{1s003=01111s0%0$01161s080=010.1s0w0$01121r0g0=010-1r0o0$010{1q0o0=010.1q0g0$01161q0w0=010-1p080$01121p0%0}010&1o003=011b1o0%0$01101o0k0}010]1n0k0$01141n0%0}010#1m000$010<1m0%0$01141m0k0}010_1l0k0$01101l0%0=010{1k003z01161k0%0"01101k080=010/1k0w0"01131j0g0=010#1j0o0"010{1i0o0=010]1i0g0"01131i0w0(010&1h080"01101h0%1/010z1g00bf01161g000}010.1g003=01141g0:0}010.1g0:1/010z1g007v01191g000}010@1g007v01171g000}010}1g0:1]010&1g0:0_01141g0:t<010z1g00t<010=1g00bf011i1g0:0}011e1g0:1/010.1f0:0}01141e0:7v010{1d000}01121d0:0}01141c0:1/01161b000}011a1b0:0}011e1a0:1/011a190:0}011e180:1/011217000}011a170:0}0114160:3=010_15003=011g150:0}011e140:1/011413000}011a130:0}0112120:7v010@11007v011l110:0}011g100:1/01190<000}011e0<0:0}011a0~0:1/01120@000}01190@0:0}011a0:0:1/01140}000}011e0}0:0}011g0{0:7v010}0+007v011j0+0:0}011g0_0:1/01170/000}011e0/0:0}011a0.0:1/01120,000}01170,0:0}011a0#0:1]01140'000}011e0'0:0_011g0;0:0t010w0]000j01120]0k0j011a0]0a0t010(0]0a0j011e0]0k0t010.0]000j011e0]0k1z011m0]0a0t010~0]0a1f011q0]0kbf010{0]0pa,01160]0raq011i0]080}011s0]0:0}011m0[000}011q0[0:0}011e0[0:0}011g0=000}011e0=0:0}011e0-0:0}011s0-0:0}011m0)000}011q0)0:0}011s0)0:0}011m0(000}011q0(0:0}011e0(0:3=010_0*000q011g0*0q3k011g0*0y0}011a0*000}011e0*0:0}011e0&0:0}011s0&0:7v010@0^000}011m0^000}011q0^0q7401190^0q6&011l0^080}011s0^0:0}011m0%000}011q0%0:0}011e0%0:0}011g0$000}011e0$0:0}011e0£0:0}011s0£0:7v010}0"000}011m0"000}011q0"0q7401170"0q6&011j0"080}011s0"0:0}011m0!000}011q0!0:0}011e0!0:0}011g0z000}011e0z0:0}011e0y0:0}011s0y0:e<010_0x000}011m0x000}011q0x0oe£01140x0q2~011g0x0a0}011s0w0:0}011m0w000}011q0w0:0}011e0v0:7w011g0v0:0}011a0u000}011e0u0:0}011e0u0:0}011s0t0:0}011m0t000}011q0t0:0}011s0s0:0}011m0s000}011q0s0:0}011e0r0:3-011g0r0:0}011a0q000}011e0q0:0}011s0p0:7v01120p000}011m0p000}011q0p0n2t011e0p0"0}011s0o0:0}011m0o000}011q0o0:1_011e0n0:0}011g0n0:0}011a0m000:011e0m0:1.011e0m0:0}011s0l0:7v01140l000}011m0l000}011q0l0m3q011g0k0£0}011s0k0:0}011m0k000}011q0k0:0}011e0j0:3-011g0j0:0}011a0i000}011e0i0:0}011e0i0:0_011s0h0:0t010+0g0u0t010:0g0u0t01100g0u0t01150g0u0t011c0g0u6p011h0g0u5}011k0g0u5t011o0g0u0"010o0g004<011t0g0£0"010q0g0$0"010s0g0£0"010t0g0$0"010v0g0£0"010x0g0£0"010z0g0£0"010£0g0d4<011f0g004<011k0g004<011o0g004<011r0g0q0"010%0g0$0"010)0g0£0"010=0g0$0"010[0g0£0"010;0g0£0"010#0g0q4<01170g004<011c0g004<011f0g004<011j0g0d0"010,0g0$0"010+0g0£0"010}0g0$0"010~0g0£0"01100g0£0k01130g000l01150g000<01180g001%011c0g002$011h0g0lcb01150g0l0k01170g0lb601180g0k0k011a0g0la3011c0g0l0k011d0g0l0k011f0g0l8e011h0g0l0k011j0g0l0k011k0g0l0k011m0g0k0k011o0g0l0k011p0g0l0k011r0g0l0k011t0g0l0k011v0g0l0k011w0g0l0k011y0g0l0k011!0g0k0k011"0g0l0k011$0g0l0k011^0g0l0q011^0g0r0q011$0g0q0q011!0g0r0q011w0g0r0q011t0g0q0q011r0g0r0q011o0g0r0q011k0g0q4a011h0g0r0q011f0g0r3k011c0g0q2{01180g0r2v01150g0r0q01130g0q0q01100g0r0q010:0g0r0q010+0g0q0q010/0g0r0!010[0g002k01130g007v01180g007v011f0g0"0!01100g0"1a01130g0"0!01150g0"4101130g0!0!01100g007701150g0077011c0g0077011h0g0"0!010#0g0"0!010+0g0!0!010#0g0"0y010!0g0"0;010u0g004<011b0g0'0;010w0g0;0;010y0g0'0;010"0g0;0;010$0g0'0;010&0g0;0;010(0g0h4<01190g004<011e0g004<011l0g0y0;010-0g0;0;010]0g0'0;010'0g0;0;010.0g0'0;010_0g0;0;010{0g0y4<01110g004d01190g004<011d0g0h0;010@0g0;0;010<0g0'0;01120g0;0;01140g0'0;01160g0;0;01190g0'2w011b0o000v010<0o0w0v01120g0w0v01140g0w0v01160g0w0v01190g0w1f011b0g0w0v011e0g0w0v011g0g0w0v011i0g0w0v011l0g0w0v011n0g0w0v011q0g0w0v011s0g0w0v011u0g0w0v011x0g0w1f010&0g003z011z0g1g1f010]0g1g1f010{0g1g0}010{0g0%0}010+0g000$010~0g0%0$01100g0k0}010:0g0k0$01150g0%0}01100g003=011a0g0%0$01150h0k0}010~0i0k0$01120j0%0}010:0l000$01110l0%0$01130n0k0}010<0o0k0$01180p0%0}01130r001/011d0r0%0$01180t0k0_01110u0k0"01150v0%0$010.0x000$010<0x0%0$010{0s000$01110s0%0$010@0m000$01160m0%0$01160h0k0}010<0i0k0$01120i0%0}010+0k000$010~0k0%0$01100l0k0}010:0m0k0$01150n0%0}01100o003=011a0o0%0$01150p0k0}010~0q0k0$01120r0%0}010:0s000$01120s0%0$01140u0k0}010<0u0k0$01180v0%0}01140x0%0$01180v0k0_01120t0k0$01150s0%bf010.0p000$010<0p0%0$010{0m000$01110m0%0$010@0j000$01160j0%7v010]0g0%0$010{0g000$01110g0%0$010@0g000$01160g0%0$01160i0k0}010<0j0k0$01120k0%0}010{0m000$010<0m0%0$01110o0k0}010@0p0k0$01160r0%0}01110t003=011b0t0%0$01160v0k0}010<0w0k0$01120x0%3=010&0z000t010<0z0u0t01110"0a0$010{0£0k0t01160$0k0$010@0%0a0t01160%0u0}01110&001/011i0&0%0$011b0(0k0_010<0)0k0"01160-0%0j010$0]000j010,0]0k0j010-0]000j010{0]0k0j010]0]000j010@0]0k0j010/0]000j01110]0k0j010{0]000j01160]0k0j010@0]000j01190]0k0#01130]0,0#01160]0.0#01190[0,0#011d0[0,0#01190=0.0#01160=0,0#01130-0,0#010@0-0.0#010{0)0,0=010/0)007v01130)007v011b0)007v011f0)0[0=010]0(0[0=010-0(0[0=010$0*0[0=010-0*0[0=010]0&0[0=010/0&0[0=010{0^0[0=010@0^0[0=010<0%0[0}01110%007v01190%007v011d0%0:0}01160$0:0}01130£0:0}01110£0:0}010@0"0:0}010/0!0:0_010,0z0:0n010(0z0o0n010'0y0o0n010}0y0o0n010<0y0o0l01120y0o0}00170x00sv010(0x0:0_001c0x0y0}001d0x003=01160]00t<010}0x00t<010<0x0y0}001d0z0:0}001b0$0:0}001p0^003=01140@0:0}001b0)0:0}001d0=0:0}00170]0000001b0]001_011b190:0}001d0]0:0}00170[000:001b0[0:2#001b0[0:0}001p0=0:0}001j0=000}001n0=0:1_001b0-0:0}001d0-0:0}00170)001_001b0)0:0}001d0)0:0}00170(000:001b0(0:0}001b0(003=0116100:0}001b0&0:0}001d0&0:0}00170^000}001b0^007v01120@0:0}001d0^0:0}00170%000}001b0%0:0}001b0%0:0}001p0$0:0}001j0$000}001n0$0:0}001b0£0:0}001d0£002#010<0/0:0}001d0"0:0}00170!000}001b0!0:0}000<0!0:0}00110z003=010{0#0:0}000<0z0:0}000}0y0:0_000'0y0:0+000,0x00t<010q0x00t<010)0x0sty010£0x00ty010;0x0t0<010,0w030}000}0w0q0y010+0w0y0:000,0v000:000+0v0:ra000,0u00ra000+0u0:0}00170t0:0}00110s000}00150s0:0}00110r000}00150r0:0}00170q0:0}001d0p000}001h0p0:0}001j0o0:0}001d0n000}001h0n0:0}001d0m000}001h0m0:0}001v0l0:0}001p0k000}001t0k0:0}001p0j000}001t0j0:0}001v0i0:3z001"0g003z001^0gf07v01150x7w7v010~0x7w3=01110x3[7701170xbg3=01150x3[7v01170x7w3=01150x3[3=01170x7we<01140]f07701150x7w0_010r0x0:1w010$0x0:0$010[0x0%0$010*0$000$010#0$0%0$010]0-000$010/0-0%0$010#0#000$010:0#0%0$010/0}000$01100}0%0$010@11000$0113110%0$011018000$0118180%0$01131f000$011c1f0%0$01191l000$011f1l0%0$011c1s000$011k1s0%0$011f1y000$011o1y0%0#011o1[000#011w1[0,0#011l1[0.0#011f1[0,0#01191[0.0#01131[0,0#010@1[0.0#010/1[0,0#010#1[000#010:1[0,0#010/1[0.0#010@1[0,0#01131[0.0#01191[0,0#011f1[0.0#011l1[0,0$011o1[000$011w1[000$011r1[0%0$011f1=000$011o1=0%0$011c1=000$011k1=0%0$01191-000$011f1-0%0$01131-000$011c1-0%0$01101)000$01181)0%0$01131(000$011c1(0%0$01191(000$011f1(0%0$011c1*000$011k1*0%0$011f1*000$011o1*0%0$011l1&000$011r1&0%0$011o1^000$011w1^0%0$011f1%000$011o1%0%0$011c1%000$011k1%0%0$01191$000$011f1$0%0$01131$000$011c1$0%0$01101£000$01181£0%0$01131"000$011c1"0%0$01191"000$011f1"0%0$011c1!000$011k1!000$011o1!0%0$011l1z000$011r1z0%0}011o1y000}011w1y0:0}011l1y000}011r1y0:0}011f1x000}011o1x0:0}011c1w000}011k1w0:0}011m1v000}011u1v0:0}011j1u000}011p1u0:0}011d1t000}011m1t0:0}011a1s000}011i1s0:0}011j1r000}011r1r0:0}011g1r000}011m1r0:0}011a1q000}011j1q0:0}01171p000}011f1p0:0}011h1o000}011p1o0:0}011e1n000}011k1n0:0}01181m000}011h1m0:0}01151l000}011d1l0:0}011c1k000}011k1k0:0}01191k000}011f1k0:0}01131j000}011c1j0:0}01101i000}01181i0:0}011a1h000}011i1h0:0}01171g000}011d1g0:0}01111f0:0}010~1e000}01161e0:0}01171d000}011f1d0:0}01141d000}011a1d0:0}010~1c000}01171c0:0}010}1b000}01131b0:0}01151a000}011d1a0:0}011219000}0118190:0}010:18000}0115180:0}010+17000}0111170:0}011016000}0118160:0}010@16000}0113160:0}010/15000}0110150:0}010#14000}010:140:0}010~130:0}010}12000}0111120:0}010,11000}010~110:0}010;10000}010{100:0}010}0<000}01130<0:0}010_0<000}010~0<0:0}010;0~000}010}0~0:0}010=0@000}010/0@0:0}010+0:000}01110:0:0}010.0}000}010:0}0:0}010[0{000}010+0{0:0}010)0+000}010,0+0:1f010#0_000}010:0_0:0}010/0_0k1f010]0/0%0}010#0/0%1f010-0.0k0}010[0.0:1f010;0,000}010{0,0:0}010,0#0k1f010=0#0%0}010;0'0%1b010(0'0k0}010-0;0:1/010_1900mv010$0]0u0t010)0]0u0t010]0]0u0t010'0[0u1/010.180u0t010+0=0u0t010@0=0u0t010<0=0u1/010]15000t01140-0u0t01110-0u0t010<0)0u0t010@0)0u0:010'13000t010+0)0u0t010.0(0u0}010'0(0u0t010]0*0u1/010_100u0t010)0&0u0t010]0&0u0t010'0&0u1/010.0@0u0t010+0^0u0t010@0%0u0t010<0%0u1/010]0:000t01140%0u0t01110$0u0t010<0$0u0t010@0£0u0:010'0+000t010+0£0u0t010.0£0u0}010'0"0u0t010]0"0u1/010_0.0u0t010)0!0u0t010]0z0u0t010'0z0u1/010.0#0u0t010+0y0u0t010@0y0u0t010<0x0u1/010]0]000t01140x0u0t01110x0u0t010<0w0u0t010@0w0u0:010'0-000t010+0v0u0t010.0v0u0}010'0v0u0t010]0u0u1_010_0)00ef010$0u0u0t010)0t0u0t010]0t0u0t010'0s0u1/010_0s0u0t010+0s0u0t010@0r0u0t010<0r0u1_010.0$000t01110q0u0t010<0q0u0t010@0q0u0t010+0p0u1/010.0p0u0t010'0o0u0t010]0o0u0t010)0o0u0:010]0y0u0t010)0n0u2'010]0m0u0t010'0m0u0t010.0l0u0t010+0l0u0t010@0l0u0t01110k0u2m010'0u000t010<0k0u0t010@0j0u0t010+0j0u0t010_0j0u0t010.0i0u1p010'0i0u0t010]0h0u0r010)0h0u0}010"0g0:0}010(0g0:nf01190g0:mj011d0g0:ln01110g00ln01140g003z011l0g003z011p0g7w1m00^07%z00l],7[3[z;7+3[<o813["58b3[,t8k3[]78u3[^07%,00r[n7@3[{*883[,t8k3[x/8x3[x98-3[#*8}3[~099/_04*g9y3[&#9=3[:r9:3[xlab3[{,ap3[&ka^3[]ra+3[]/ba3[)vbs<[01,t8k%w07,'xi013=,t8k7x)vbsxw03£;5-zo03'f5/3[=w613[:@6b3[:,6m3[[#6y3[{#6-3[:z6}3[_p793[]17o1_^07%zw02}0m_3=^07%3].wj4e<^07%0&02010804020104020108040201040201080402010804020104020108040201040201080402010804020104020108040201040201080402010804020104020108040201040201080402010804020104020108040201040201080402010804020104020108040201040201083)0&02010804020104020108040201040201083-0&0201080402010402010804020104020108040201080402010402011,0u040201040201083=0&0201080s010s013[0u0s010s01083)0&02010804020104020108040201040201083-0&0201080402010402010804020104020108040201080402010402011,0u040201040201083=0&0201080s010s013[0u0s010s01087w0&0201080402010402017x0u7y02017z0201087!0&020808047"0u04010401083]0&0201080804020108040201040201083;0&02010l0l0402011,2r0402010402017£7$2s02010l0l0x02010l0x02010x02010l0x02010l0l0x02010l0x02010x02010l0x02010l0l0x02017%2r0x02010x02010l3;0&02010l0l0402011,2r0402010402010l3]2s02010l0l0x02010l0x02010x02010l7^2s02010l7&7*7(7)7-7=7[7]7;7'7#7,7.7/7_7+0b7{7}7:7@7~3'3#7<3,3.803/818283848586873_88898a8b8c8d8e8f8g8h3.3/8i3+3+3#3,8j8k8l8m8n8o8p3'8q3{8r8s8t8u8v8w8x8y8z2t3}3:2t3}3:8!2u0c030d0q05030d05030d0q05030d05030d0q1.0c030d0q05030d05030d0q05030d05030d0q05030d0q05030d05030d112v05030d05030d0q1c0c0306070503060503063@0;3~03062w0306072u0c030d0q05030d05030d0q05030d05030d0q1.0c030d0q05030d05030d0q05030d05030d0q05030d0q05030d05030d112v05030d05030d0q1c0c0306070503060503063@0;3~03062w03061y3<090306070m03060m0306070m03060m0306078"0906070m060m06070m060m06078£0903070m030m031/0;0m03060m0306078$0c0306070503060503060705030605030607050306070503060503061/0;0m03060m030607400306074106422x4312070y03060y442x8%0c0705030605030607050306050306071/090306070m03060m03068^0;05030605030607400306074106422x4312070y03060y03063<090306070m03060m0306070m03060m0306078&45038*1_031_031/090306070m03068(8)8-46120r471q0y0r0o4849130o0'4a120r4b1q0y0r0h4c4d0n0h0'0y0r0'0y0r0o1z4e4f4g134h0'4i120r4j1q0y0r0h1c0a4k4l0n0h0'46120r471q0y0r0o4849130o0'4a120r4b1q0y0r0h4c4d0n0h0'0y0r0'0y0r0o1z4e4f4g134h0'4i120r4j1q0y0r0h1c0a4k4l0n0h8=0]8[8]8;8'8#8,8.8/8_8+8{8}4m8:8@8~8<901d9192934n4o9495964p9798999a9b9c9d9e9f9g9h9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9y9z9!9"9£9$9%4q2y9^9&9*4r4n9(4o9)9-9=9[9]9;9'4s9#9,9.9/9_9+9{9}9:9@4t9~9<a0a1a2a3a4a5a64ua7a8a9aaabacadaeafagahaiajakalamanaoapaqarasatauavawaxayaz4va!a"4wa£a$a%a^a&a*a(a)a-a=a[a]a;a'a#a,a.a/a_a+a{a}a:a@a~a<b0b1b2b3b4b5b6b7b8b9babbbcbdbebfbgbhbibjbkblbmbnbobpbqbrbsbtbubvbwbxbybzb!b"b£b$b%b^b&4x4yb*b(4zb)b-4!4"b=b[b]b;b'b#b,b.b/4£b_b+4$b{b}b:b@b~b<4%c0c1c2c3c4c5c6c7c8c9cacb141e141f1g1h1i1e141f1g1h1i1f1g1h1i1e141f1g1h1i1e141e141f1g1h1i1e141f1g1h1i1f1g1h1i1e14cccdcecfcgchcicjckclcmcncocpcqcrcsctcucvcwcx0hcy2zczc!c"c£1j1k1j1!0#1"1£1k1j1!0#1"1£1!0#1"1£1k1j1!0#1"1£1k1j1k1j1!0#1"1£1k1j4^c$c%c^c&c*c(c)c-c=c[c]c;c'c#c,c.c/c_c+c{c}c:c@c~c<d04&d1d2d3d4d5d6d7d8d9dadbdc1l1r1l1$1+1%1^1r1l1$1+1%1^1$1+1%1^1r1l1$1+1%1^1r1l1r1l1$1%1^1r1ldddedfdg4wdhdidjdkdldmdndo4&dpdqdr4*dsdtdudvdwdxdydzd!d"d£d$d%d^d&d*d(d)d-d=d[d]d;d'd#d,d.d/d_d+d{d}d:d@d~d<e0e1e2e3e4e5e6e7e8e9eaebecedeeefeg1&0,eh0.ei4(0,ej1&0,ek0.el4)0,1s0.1m0.1m1&0,1s0.1m4(0,1s1&0,1s0.1m4)0,1s0.1m0.1m1&0,1s0.1memeneoepeqereseteuevewexeyeze!e"e£e$e%e^e&e*e(e)e-e=e[e]e;e'e#e,e.e/e_e+e{e}e:e@4ue~e<f0f1f24-4-f3f4f5f6f7f8f9fafbfcfdfefffgfhfifjfkflfm4vfnfofpfqfrfsftfufvfwfxfyfzf!f"f£f$f%f^f&1{1{f*f(f)4=f-1*f=f[f]f;f'f#f,f.f/f_f+f{f}f:0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v0e0i0j0v0e0i0j0e0i0j0v0e0i0j0e0i0j0v110n0k0c0p0h0k0c0h0k0c1z0*1t0c1t0c0p4[0n0k0c0p0h0k0c0h0k0c4]0*0h0k0c0h0k0c0pf@0n0k0c0p0h0k0c0h0k0c0p0h0k0c0h0k0c0p1z0k0c0p1t0c1t0c4;0*0h0k0c0h0k0c0pf~1}0a09050f0a090f0a09050f0a090f0a09050f0a09050f0a090f0a092!0c0f0a090f0a09054'4#0a09054,0a090f0a094.0c0f0a090f0a09054/1}0a09050f0a090f0a09050f0a090f0a09052!1}0a09050f0a090f0a094;0c0f0a090f0a09054'4#0a09054,0a090f0a094.0c0f0a090f0a0905f<1}0a09050f0a090f0a09050f0a090f0a09050f0a09050f0a090f0a09g00c0f0a090f0a091k4/0n0k0c0p05050/0q0!050p1t0c0p051u1d1:1*1ug1114^0n0k0c0p05051z2y4_0q0!050p4[4+0k0c0p051ug21@1:1*1u0p4=2"4{0n0k0c4}0*1n0c1:0c1u4_1d2v0!0h0c1t0*0h2y1d0k0*1u0n1:0n1(4:1*1n0k4}1@g31*4@g4g51o2£0#1~1o1n1o1(0#4~1o1d1o0f0#0hg60f0#1d1o4~1o1(g7g80_1n0n1~0n2£0_4@2$4+0n2£0_1~0n1n0n1(g94q0_1n0n1~0nga0_gbgcgdgegfggghgigjgkglgmgngogpgqgrgsgtgugvgwgxgygzg!g"g£g$g%g^g&2%4:0ng*g(g)g-4<g=1{g[g]g;g'g#50g,g.g/4pg_g+g{g}g:g@g~g<h0h1h2h3h4h5h6h7h8h9hahbhchdhehfhghhhihjhkhlhmhnhohphqhrhshthuhvhwhxhyhzh!h"h£h$h%h^h&512^h*h(2^1(h)451<0_h-2^1_h=2&0_1_h[0_h]h;0;0g0d2w0_1yh'0d070b0b070!0b0b070g0d070b0b070!0b0b070g0d070b0b070!0b0b072u0z0d070b0b070!0b0b071.0z0d070b0b070!0b0b070g0d070b0b110;0!0b0b1y1c52532*15151)1-54551-1)151556h#0z0d070b0b070!0b0b071.0z0d070b0b070!0b0b070g0d070b0b110;0!0b0b1y1c52532*15151)1-54551-1)151556h,0z0d070b0bh.0;0!0b0b1yh/2*h_1)57h+h{h}h:h@58h~h<i0i1i2i3i4i5i6i758i8i9iaibicidieifigihiiijikiliminioipiqirisitiuiviwixiyizi!i"i£i$i%i^20i&4<i*i(i)i-i=i[59i]i;i'i#i,i.i/i_i+i{i}i:i@i~i<j0j1j2j3j4511n2020j50n1d2&200hj61@2&0h1<1<j70r0p0z1<0oj80*0z0o0g0gj9130/160g0oja5a0*0z0o0g0g210/160g0o5b2z0*0z0o0g0g210/160g0o0p0z0o0g0g5c5d130/165e2(115f5g225h232425265i275j262524235k225ljb5a0*0z0o0g0g210/160g0o5b2z0*0z0o0g0g210/160g0o0p0z0o0g0g5c5d130/165e2(115f5g225h232425265i275j262524235k225ljcjd0*0z0o0g0gje27130/160g2(jfjgjh5m5n575ojijjjk1-5m5o5njljmjnjojpjqjrjs5p2)jt2)5pju2)jvjw27jxjy5q5r5sjzj!5q5r5sj"j£5tj$j%1@j^j&j*4rj(j)j-50j=j[j]j;59j'j#4sj,j.28j/j_j+j{j}j:4tj@j~j<k0k1k2k3k4k5k6k7k8k9kakbkckdkekfkgkhkikj5tkkklkmknko28282!kpkq2-28294]kr2-291=1=ks5u5v5w1=291ckt2-291=1=ku5u5v5wkvkw0+5x172=2[1v18kx195y1a5z2]2;0+ky172=2[1v18kz195y1a5z2]2;0+5x175!5"5£k!k"k£5$k$5%1w0+k%175!5"5£18k^195$1a5%1w0+k&172'5^1v18k*195&1a2#1w0+172'5^1v18k(195&1a2#1w0+k)172'k-1v18k=195*1a2#1w0+k[17k]k;k'18k#195*1ak,1w0+k.k/2=2[1v18k_19k+1ak{2]2;k}k:k@k~k<l0l1l2l3l4l5l6l7l8l9lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl!l"l£l$l%l^l&l*5(l(l)5)l-l=l[l]l;l'l#5)l,l.l/l_5(l+l{l}l:l@l~l<m0m1m2m3m4m5m62,2.2/2_2+m72{2}2:2@2~2a2<303132333435363738395-5=3a3b3c3d3e3f3g3h3i1[3j3k3l3m3n3o3p3q3r3s3t3u3v1]3w3x5[5]3y3z3!1;5;3"5'5#3£5,5.5/5_5+5{5}5:5@5~5<606162636465666768692,6a2.2/2_2+m86b2{2}2:2@2~2a2<303132333435363738395-5=3a3b3c3d3e3f3g3h3i1[3j3k3l3m3n3o3p3q3r3s3t3u3v1]3w3x5[5]3y3z3!1;5;3"5'5#3£5,5.5/5_5+5{5}5:5@5~5<606162636465666768692,6a2.2/2_2+m96b2{2}2:2@2~2a2<30313233343536373839mamb3a3b3c3d3e3f3g3h3i1[mcmd3j3k3l3m3n3o3p3qmemfmgmh3r3s3t3u3v1]3w3xmimj3y3z3!1;mk3"mlmmmnmompmqmrmsmt6c3$6d6e6fmu6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v1[mvmw6w6x6y6z6!6"6£6$6%6^6&6*6(6)6-6=6[6]6;1]6'6#6,6.mx6/mymzm!1;m"m£m$m%m^m&m*3£m(m)m-m=m[m]m;m'm#m,m.m/m_m+m{m}m:m@m~m<n0n16cn23$6d6e6fn3n46g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v1[n5n66w6x6y6z6!6"6£6$6%6^n7n86&6*6(6)6-6=6[6]n9nanbnc6;1]6'6#6,6.nd6/nenfng1;nhninjnknlnmnnnonpnqnrnsntnu3$nvnwnxny6_nzn!n"n£6_n$n%n^n&n*n(n)n-n=n[n]n;n'n#n,n.n/n_n+n{n}n:n@n~n<o0o1o2o3o4o5o6o7o8o9oaobocodoeofogohoiojokolomonooopoqorosotouovowoxoyozo!o"o£o$o%o^o&o*o(o)o-o=o[o]o;o'o#o,o.o/o_o+o{o}o:o@o~o<p0p1p2p3p4p5p6p7p8p9papbpcpdpepfpgphpipjpkplpmpnpopppqprpsptpupvpwpxpypzp!p"p£p$p%p^p&p*p(p)p-p=p[p]p;p'p#p,p.p/p_p+p{p}p:p@p~p<q0q1q2q3q4q5q6q7q8q9qaqbqcqdqeqfqgqhqiqjqkqlqmqnqoqpqqqrqsqtquqvqwqxqyqzq!q"q£q$q%q^q&q*q(q)q-q=q[q]q;6+q'q#q,6+q.q/q_q+q{q}q:q@q~q<r0r1r2r3r4r5r6r7r8r9rarbrcrdrerfrgrh6{rirjrkrlrmrnrorprqrrrsrtrurvrwrxryrzr!r"r£r$r%r^r&r*r(r)r-r=r[r]6}r;r'r#r,r.r/r_r+r{r}r:r@r~r<s0s1s2s3s4s5s6s7s8s9sasbscsdsesfsgshsisjskslsmsnsospsqsrssstsusvswsxsyszs!s"s£2b3%2c3^2ds$3^2e2c2b6:2b2e2c3^2ds%2b3%2cs^s&s*3&3%2f2g2ds(2g2e2f3&6:s)3&2e2f2g2ds-2gs=2fs[s]s;s's#s,6@s.s/s_s+s{s}s:s@s~s<t0t1t2t3t4t5t6t7t8t9tatbtctdtetftgthtitjtktltmtntotptqtrtstttutvtwtxtytzt!t"t£t$t%t^t&t*t(t)t-t=t[t]3_t;t't#t,t.t/t_t+t{t}t:t@t~t<u0u1u2u3u4u5u6u7u8u9uaub3{ucudueufuguhuiujukulumunuo2tupuqurusutuuuvuwuxuyuzu!u"u£u$u%u^u&u*u(u)u-u=u[u]u;4mu'u#u,u.u/u_u+u{u}u:u@u~u<v0v1v2v3v4v5v6v7v8v9vavbvcvdvevfvgvhvivjvkvlvmvnvovpvqvrvsvt4zvuvvvwvxvyvz4!4"v!v"v£v$v%v^v&v*v(v)4£v-v=4$v[v]4%v;v'v#v,v.v/v_v+v{v}v:v@v~v<w001w101w201w301w401w501w601w701w801w901wa01wb01wc01wd01we01wf01wg01wh01wi01wj01wk01wl01wm01wn01wo01wp01wq01wr01ws01wt01wu01wv01ww01wx01wy012h6~wz01w!01w"01w£01w$016~2h2i2i2j6<w%01w^01w&012j2iw*012hw(012hw)012i2j6<2jw-01w=01w[014x4yw]01w;01w'01w#01w,01w.01w/01w_01w+01w{01w}01w:01w@01w~01w<01x001x101x201x301x401x501x601x701x801x901xa01xb01xc01xd01xe01xf01xg01xh01xi01xj01xk01xl01xm01xn01xo01xp01xq01xr01xs01xt010"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%0=0"0(0)0-0w1p0£0$0%xu01xv01xw01xx01xy01xz01x!01x"01x£01x$01x%01x^01x&01x*01x(01x)01x-01x=01x[01x]01x;01x'01x#01x,01x.01x/010w1'0£0$0%0=0"0(0)0-0w1'0£0$0%0=0"0(0)0-0w3*0£0$0%0=0"0(0)0-0w3*x_01x+01x{01x}01x:01x@01x~01x<01y001y101y201y301y401y501y601y701y801y901ya0144yb01yc01yd01ye01yf01yg01yh01yi01yj010w1'0£0$0%0=0"0(0)0-0w1'0£0$0%0=0"0(0)0-0w3*0£0$0%yk010"yl01ym01yn01yo010w1'yp01yq01yr01ys01yt01yu01yv01yw01yx01yy01yz01y!01y"01y£01y$01y%01y^01y&01y*01y(01y)01y-01y=01y[01y]01y;01y'01y#01y,01y.01y/01y_01y+01y{01y}01y:01y@01y~014{y<01z001z101z201z301z401z501z601z701z801z901za01zb01zc01zd01ze01zf01zg01zh01zi01zj01zk01zl01zm01zn01zo01zp01zq011{zr01zs01zt01zu01zv01zw01zx01zy010^zz012"70710[0t0^1b2k2l2m1b0[0t0^720[0t0^737475760[0t0^0[0t0^1b2k2%2l2m1b0[0t2n2$77783(0t2n1x797a1x1xz!010t0^7b2"70717cz"010t0^1b2k2l2m1b0[0t0^720[0t0^737475760[0t0^0[0t0^1b2k2%2l2m1b0[0t2n2$77783(0t2n1x797a1x1x3(0t0^7bz£01z$01z%017cz^017d7ez&01z*01z(017f7gz)01z-01z=01z[01z]01z;01z'01z#01z,01z.01z/01z_01z+01z{01z}01z:01z@01z~01z<01!0012a!1017f7g!201!301!401!501!601!701!801!901!a01!b01!c01!d01!e01!f017d7e!g01!h01!i01!j01!k01!l01!m01!n01!o01!p01!q01!r01!s01!t01!u01!v01!w01!x01!y01!z01!!01!"01!£01!$01!%01!^01!&01!*01!(01!)01!-01!=01![01!]01!;01!'01!#01!,01!.01!/01!_01!+01!{01!}01!:01!@017h!~01!<017i7j"001"101"2017i7j7h"301"401"501"601"701"801"901"a01"b01"c01"d01"e01"f01"g01"h01"i01"j01"k01"l01"m01"n01"o01"p01"q01"r017k7l"s01"t01"u017m"v017n7o7p"w017q"x017r7s7t"y017u"z017v"!01""01"£017v"$017u7s7t"%017r"^017q7o7p"&017n"*017m"(01")016{"-01"=01"[01"]01";01"'01"#01",01".01"/01"_01"+01"{01"}01":01"@01"~01"<01£001£101£201£301£4017k7l£501£601£701£801£901£a01£b01£c01£d01£e01£f01£g01£h01£i01£j01£k016}£l01£m01£n01£o01£p01£q01£r01£s01£t01£u01£v01£w01£x01£y01£z01£!01£"01££01£$01£%01£^01£&01£*01£(01£)01£-01£=01£[01£]01£;01£'01£#01£,01£.01£/01£_01£+01£{01£}01£:01£@01£~01£<01$001$101$201$301$4016@$501$601$701$801$901$a01$b01$c01$d01$e01$f01$g01$h01$i01$j01$k01$l01$m01$n01$o01$p01$q01$r01$s01$t01$u01$v014*$w01$x01$y01$z01$!01$"01$£01$$01$%01$^01$&01$*01$(01$)01$-01$=01$[01$]01$;01$'01$#01$,01$.01$/01$_01$+01${01$}01$:01$@01$~01$<01%001%101%201%301%401%501%601%701%801%901%a01%b01%c01%d01%e01%f01%g01%h01%i01%j01%k01%l01%m01%n01%o01%p01%q01%r01%s01%t01%u01%v01%w01%x01%y01%z01%!01%"01%£01%$01%%01%^01%&01%*01%(01%)01%-01%=01%[01%]01%;01%'01%#01%,01%.01%/01%_01%+01%{01%}01%:01%@01%~01%<01^001^101^201^301^401^501^601^701^801^901^a01^b01^c01^d01^e01^f01^g01^h01^i01^j01^k01^l01^m01^n01^o01^p01^q01^r01^s01^t01^u01^v011#0{0}0:0@0]0~0<100e0204010s0u2o2p2q0s0u04010e020<100]0~0:0@0{0}1#0{0}0:0@0]0~0<100e0204010s0u2o2p2q0s0u04010e020<100]0~0:0@0{0}1#0{0}0:0@0]0~0<100e0204010s0u2o2p2q0s0u04010e020<100]0~0:0@0{0}1#0{0}0:0@0]0~0<100e0204010s0u2o2p2q0s0u04010e020<100]0~0:0@0{0}1#0{0}0:0@0]0~0<100e02^w0101^x010u^y01^z01^!01^"01
}
base64 digits = { 
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    a
    b
    c
    d
    e
    f
    g
    h
    i
    j
    k
    l
    m
    n
    o
    p
    q
    r
    s
    t
    u
    v
    w
    x
    y
    z
    !
    "
    £
    $
    %
    ^
    &
    *
    (
    )
    -
    =
    [
    ]
    ;
    '
    #
    ,
    .
    /
    _
    +
    {
    }
    :
    @
    ~
    <
}
dictionary = { }
drum map = { 
    2
    2
    3
    1
    8
    1
    14
    6
    13
    6
    14
    5
    14
    13
    4
    13
    5
    4
    7
    7
    4
    11
    4
    17
    4
    13
    14
    13
    13
    14
    13
    14
    9
    10
    15
    15
    12
    12
    16
    16
    9
    10
    10
    18
    18
    12
    12
}
hex digits = { 
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    A
    B
    C
    D
    E
    F
}
index to actual note data = { }
indirect indexes = { }
menu options = { 
    Import a MIDI song
    Remove a song
    Remove all songs
    Instructions
    Leave menu
}
note indexes = { }
patch map = { 
    1
    1
    2
    1
    2
    2
    1
    1
    19
    19
    17
    16
    19
    19
    19
    19
    3
    3
    3
    3
    3
    3
    3
    3
    4
    4
    5
    5
    5
    5
    5
    4
    6
    6
    7
    6
    6
    6
    6
    6
    8
    8
    8
    8
    8
    7
    8
    8
    8
    8
    8
    8
    15
    15
    15
    8
    9
    9
    9
    9
    9
    9
    9
    9
    11
    11
    11
    11
    14
    10
    14
    10
    12
    12
    13
    13
    13
    13
    13
    13
    20
    3
    20
    20
    20
    20
    20
    20
    21
    21
    21
    21
    21
    21
    21
    21
    21
    21
    7
    15
    16
    16
    18
    15
    4
    7
    19
    21
    19
    
    8
    11
    7
    7
    18
    19
    
    18
    21
    7
    5
    
    18
    13
    16
    18
    15
    18
}
raw data = { }
run lengths = { }
segment = { }
segment frequency = { }


//----- Green flag events ---------------------------------------------------------------------------------------------

WhenGreenFlagClicked()
{
    clone? = "false";
    playing? = "false";
    Motion.GoToXY(0, 0);
    Looks.SetSizeTo(100);
    Looks.Hide();
    Call Hide menu lists;
    Call Initialize Maps;
}


//----- Key pressed events --------------------------------------------------------------------------------------------

WhenKeyPressed(m)
{
    MusicEnabled = (Not ((MusicEnabled == "true")));
    If ((MusicEnabled == "true") And (PhysicsEnabled == "true"))
    {
        Event.Broadcast("MIDI: Play");
    }
    Else
    {
        Event.Broadcast("MIDI: Stop");
    }
}


//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(MIDI: Clear)
{
    If (clone? == "false")
    {
        Call Clear All Song Data;
    }
}

WhenBroadcastReceived(MIDI: Edit)
{
    If (clone? == "false")
    {
        Call Initialize Menu (no UI);
    }
}

WhenBroadcastReceived(MIDI: Import)
{
    If (clone? == "false")
    {
        Call Import MIDI(Music File (.midi)) (name(MIDI: Song) , reload?() );
    }
}

WhenBroadcastReceived(MIDI: Pause)
{
    If ((clone? == "false") And (paused? == "false"))
    {
        Event.BroadcastAndWait("MIDI: Toggle pause");
    }
}

WhenBroadcastReceived(MIDI: Play)
{
    If (clone? == "false")
    {
        Event.BroadcastAndWait("z_MIDI: Reset");
        Call Get song index(MIDI: Song);
        If (midi song == 0)
        {
            Stop(this script);
        }
        Call Transfer;
        Call //("Default tempo is equivalent to 120 bpm (and is the length of one quarter beat)");
        Event.Broadcast("MIDI: Reset visualisation");
        clone type = "playback";
        z_MIDI: Note tracker = 1;
        Music.SetTempo(120);
        tempo = 0.125;
        z_MIDI: Pulse count = 0;
        old pulse count = z_MIDI: Pulse count;
        z_MIDI: Note index = 1;
        tempo index = 1;
        tempo tracker = 0;
        note tracker = 0;
        time = 0;
        z_MIDI: Done? = "false";
        z_MIDI: Active clones = 0;
        Repeat (48)
        {
            Control.CreateCloneOf(_myself_);
        }
        Call Get first time;
        playing? = "true";
        paused? = "false";
        timer start = Sensing.DaysSince2000();
        Repeat Until (z_MIDI: Note index > List.Length(z_MIDI: Decode note queue))
        {
            If (paused? == "false")
            {
                List.DeleteAll(MIDI: Visualisation data);
                Call Batch notes;
                Event.Broadcast("MIDI: Update visualisation");
            }
        }
        z_MIDI: Done? = "true";
        Wait Until (z_MIDI: Active clones == 0);
        Event.Broadcast("MIDI: Song completed callback");
    }
}

WhenBroadcastReceived(MIDI: Song completed callback)
{
    If (MusicEnabled == "true")
    {
        Event.Broadcast("MIDI: Play");
    }
}

WhenBroadcastReceived(MIDI: Stop)
{
    If (clone? == "true")
    {
        Control.DeleteThisClone();
    }
    Else
    {
        Stop(other scripts in sprite);
        playing? = "false";
        Event.Broadcast("MIDI: Reset visualisation");
    }
}

WhenBroadcastReceived(MIDI: Toggle pause)
{
    If (clone? == "true")
    {
    }
    Else
    {
        If (playing? == "true")
        {
            If (paused? == "false")
            {
                paused? = "true";
            }
            Else
            {
                paused? = "false";
                timer start = Sensing.DaysSince2000();
                time = 0;
            }
        }
    }
}

WhenBroadcastReceived(MIDI: Unpause)
{
    If ((clone? == "false") And (paused? == "true"))
    {
        Event.BroadcastAndWait("MIDI: Toggle pause");
    }
}

WhenBroadcastReceived(Pause)
{
    If (MusicEnabled == "true")
    {
        Event.Broadcast("MIDI: Pause");
    }
}

WhenBroadcastReceived(StartPhysics)
{
    If (MusicEnabled == "true")
    {
        Event.Broadcast("MIDI: Unpause");
    }
}

WhenBroadcastReceived(z_MIDI: Process music track)
{
    If (clone type == "decode")
    {
        If (track number > 1)
        {
            Call Process track;
        }
    }
}

WhenBroadcastReceived(z_MIDI: Process tempo track)
{
    If (clone type == "decode")
    {
        If (track number == 1)
        {
            Call Process track;
        }
    }
}

WhenBroadcastReceived(z_MIDI: Reset)
{
    If (clone? == "true")
    {
        Control.DeleteThisClone();
    }
    Else
    {
        z_MIDI: Active clones = 0;
        Event.Broadcast("MIDI: Reset visualisation");
    }
}


//----- Start as clone ------------------------------------------------------------------------------------------------

Control.WhenIStartAsClone()
{
    If (clone type == "decode")
    {
        Call Read variable length;
        delta time = value;
        next active pulse count = delta time;
        midi start = midi index;
    }
}

Control.WhenIStartAsClone()
{
    If (clone type == "playback")
    {
        clone? = "true";
        z_MIDI: Active clones += 1;
        Forever
        {
            Wait Until ((z_MIDI: Note tracker < z_MIDI: Note index) Or (z_MIDI: Done? == "true"));
            If (z_MIDI: Done? == "true")
            {
                z_MIDI: Active clones += -1;
                Control.DeleteThisClone();
            }
            pitch = z_MIDI: Decode note queue[(z_MIDI: Note tracker + 3)];
            beats = (z_MIDI: Decode note queue[(z_MIDI: Note tracker + 1)] / (pulses per quarter beat * 4));
            instrument = z_MIDI: Decode note queue[(z_MIDI: Note tracker + 2)];
            volume = ((z_MIDI: Decode note queue[(z_MIDI: Note tracker + 4)] * 100) / 127);
            z_MIDI: Note tracker += 5;
            List.Add(MIDI: Visualisation data, pitch);
            List.Add(MIDI: Visualisation data, ((beats * 60) / Music.Tempo()));
            List.Add(MIDI: Visualisation data, instrument);
            List.Add(MIDI: Visualisation data, volume);
            Sound.SetVolumeTo(volume);
            If (instrument < 128)
            {
                Music.SetInstrument(z_MIDI: Patch Map[(instrument + 1)]);
                Music.PlayNote(pitch, beats);
            }
            Else
            {
                If (((instrument - 127) > 0) And ((instrument - 127) < 48))
                {
                    Music.PlayDrum(z_MIDI: Drum map[(instrument - 127)], beats);
                }
            }
        }
    }
}


//----- Custom blocks -------------------------------------------------------------------------------------------------

Define //(string comment) (warp=true)
{
}

Define Add base64(string number)(string digits) (warp=true)
{
    number = number;
    hex = "";
    Repeat (digits)
    {
        mod = (number % 64);
        hex = Operator.Join(Operator.LetterOf(base64, (mod + 1)), hex);
        number = ((number - mod) / 64);
    }
    hex output = Operator.Join(hex output, hex);
    If (number > 0)
    {
        List.Add(z_MIDI: Errors, Operator.Join("overflow ", number));
        List.Show(z_MIDI: Errors);
        Stop(all);
    }
}

Define Add variable length base64(string value) (warp=true)
{
    value = value;
    Forever
    {
        If (value < 2048)
        {
            Call Add base64(value)(2);
            Stop(this script);
        }
        Else
        {
            Call Add base64(((value % 2048) + 2048))(2);
            value = ((value - (value % 2048)) / 2048);
        }
    }
}

Define Batch notes (warp=true)
{
    Repeat Until ((((Sensing.DaysSince2000() - timer start) * 86400) < time) Or ((tempo index > List.Length(z_MIDI: Tempo queue)) And (z_MIDI: Note index > List.Length(z_MIDI: Decode note queue))))
    {
        Repeat Until ((tempo index > List.Length(z_MIDI: Tempo queue)) Or (Not (((tempo tracker + z_MIDI: Tempo queue[tempo index]) == z_MIDI: Pulse count))))
        {
            tempo tracker += z_MIDI: Tempo queue[tempo index];
            tempo = z_MIDI: Tempo queue[(tempo index + 1)];
            Music.SetTempo((60 / (tempo * 4)));
            tempo index += 2;
        }
        Repeat Until ((z_MIDI: Note index > List.Length(z_MIDI: Decode note queue)) Or (Not (((note tracker + z_MIDI: Decode note queue[z_MIDI: Note index]) == z_MIDI: Pulse count))))
        {
            note tracker += z_MIDI: Decode note queue[z_MIDI: Note index];
            z_MIDI: Note index += 5;
        }
        Call Get next time;
    }
}

Define Clear All Song Data (warp=true)
{
    List.DeleteAll(all song data);
    Call Update song list;
    dirty? = "true";
}

Define Compress and store(string Name) (warp=true)
{
    List.DeleteAll(segment);
    List.DeleteAll(segment frequency);
    Call //("Build a table of note segments and their frequencies");
    List.DeleteAll(note indexes);
    List.DeleteAll(index to actual note data);
    index = 1;
    Call Set Progress Title("Storing MIDI data...");
    Repeat Until (index > List.Length(z_MIDI: Decode note queue))
    {
        hex output = "";
        Repeat (2)
        {
            Call Add base64(z_MIDI: Decode note queue[index])(4);
            index += 1;
        }
        Repeat (3)
        {
            Call Add base64(z_MIDI: Decode note queue[index])(2);
            index += 1;
        }
        segment index = List.IndexOf(segment, Operator.Join("hex", hex output));
        If (segment index == 0)
        {
            List.Add(segment, Operator.Join("hex", hex output));
            List.Add(segment frequency, 1);
            List.Add(note indexes, List.Length(segment));
            List.Add(index to actual note data, (index - 5));
        }
        Else
        {
            List.ReplaceItem(segment frequency, segment index, (segment frequency[segment index] + 1));
            List.Add(note indexes, segment index);
        }
        z_MIDI: Progress = (55 + (30 * (index / List.Length(z_MIDI: Decode note queue))));
        Call Set Progress(z_MIDI: Progress);
    }
    Call //("segment, segmentFrequency, indexToActualNoteData all have the same number of entries");
    Call //("When these are bubble sorted by frequency, all three lists should be bubble sorted together");
    Call //("noteIndexes is a different case. This points into the previous lists and has an entry for every note in the song");
    Call //("We need another list the length of segment which contains entries 1, 2, 3, 4 ... lengthOf(segment)");
    Call //("This should be sorted with the previous three lists and can then be used as an indirect index by noteIndexes");
    List.DeleteAll(indirect indexes);
    index = 1;
    Repeat (List.Length(segment))
    {
        List.Add(indirect indexes, index);
        index += 1;
    }
    Call //("Sort the list in order of frequency");
    max = 0;
    index = 1;
    Call Set Progress Title("Sorting music data...");
    Repeat Until (index == List.Length(segment))
    {
        If (segment frequency[(index + 1)] > segment frequency[index])
        {
            i = index;
            Repeat Until ((i == 0) Or (Not ((segment frequency[(index + 1)] > segment frequency[i]))))
            {
                i += -1;
            }
            temp = segment[(index + 1)];
            List.DeleteItem(segment, (index + 1));
            List.InsertItem(segment, (i + 1), temp);
            temp = segment frequency[(index + 1)];
            List.DeleteItem(segment frequency, (index + 1));
            List.InsertItem(segment frequency, (i + 1), temp);
            temp = index to actual note data[(index + 1)];
            List.DeleteItem(index to actual note data, (index + 1));
            List.InsertItem(index to actual note data, (i + 1), temp);
            temp = indirect indexes[(index + 1)];
            List.DeleteItem(indirect indexes, (index + 1));
            List.InsertItem(indirect indexes, (i + 1), temp);
            If (index > 1)
            {
                index += -1;
            }
        }
        Else
        {
            index += 1;
            If (index > max)
            {
                max = index;
            }
        }
        z_MIDI: Progress = (85 + ((index / List.Length(segment)) * 15));
        Call Set Progress(z_MIDI: Progress);
    }
    Call //("Now write the data (using variable length hex writes)");
    hex output = "";
    Call //("Data format version 1");
    Call Add variable length base64(1);
    Call Add variable length base64(Variable.Length(Name));
    hex output = Operator.Join(hex output, Name);
    Call Add variable length base64(List.Length(segment));
    i = 1;
    Repeat (List.Length(segment))
    {
        Call Add variable length base64(z_MIDI: Decode note queue[index to actual note data[i]]);
        Call Add variable length base64(z_MIDI: Decode note queue[(index to actual note data[i] + 1)]);
        Call Add base64(z_MIDI: Decode note queue[(index to actual note data[i] + 2)])(2);
        Call Add base64(z_MIDI: Decode note queue[(index to actual note data[i] + 3)])(2);
        Call Add base64(z_MIDI: Decode note queue[(index to actual note data[i] + 4)])(2);
        i += 1;
    }
    Call Add variable length base64(pulses per quarter beat);
    Call Add variable length base64(List.Length(z_MIDI: Tempo queue));
    index = 1;
    Repeat Until (index > List.Length(z_MIDI: Tempo queue))
    {
        Call Add variable length base64(z_MIDI: Tempo queue[index]);
        index += 1;
        Call Add variable length base64(Operator.Round((z_MIDI: Tempo queue[index] * 1000000)));
        index += 1;
    }
    i = 1;
    Repeat Until (i > List.Length(note indexes))
    {
        Call Add variable length base64(List.IndexOf(indirect indexes, note indexes[i]));
        i += 1;
    }
    List.DeleteAll(segment);
    List.DeleteAll(segment frequency);
    List.DeleteAll(z_MIDI: Tempo queue);
    List.DeleteAll(z_MIDI: Decode note queue);
    List.DeleteAll(run lengths);
    List.DeleteAll(note indexes);
    List.DeleteAll(index to actual note data);
    List.DeleteAll(indirect indexes);
}

Define Convert hex to byte array (warp=true)
{
    byte array = "";
    row = 1;
    Repeat Until (row > List.Length(raw data))
    {
        data = raw data[row];
        index = 1;
        Repeat Until (index > Variable.Length(data))
        {
            If ((Operator.LetterOf(data, index) == 0) And ((index < Variable.Length(data)) And (Operator.LetterOf(data, (index + 1)) == "x")))
            {
                index += 2;
            }
            Else
            {
                If ((Operator.LetterOf(data, index) == " ") Or (Operator.LetterOf(data, index) == ","))
                {
                    index += 1;
                }
                Else
                {
                    byte array = Operator.Join(byte array, Operator.Join(Operator.LetterOf(data, index), Operator.LetterOf(data, (index + 1))));
                    index += 2;
                }
            }
        }
        row += 1;
    }
    data = "";
}

Define Convert I32HEX to byte array (warp=true)
{
    byte array = "";
    index = 1;
    data = raw data2[1];
    Forever
    {
        Repeat Until (Operator.LetterOf(data, index) == ":")
        {
            index += 1;
            If (index > Variable.Length(data))
            {
                data = "";
                Stop(this script);
            }
        }
        index += 1;
        If (Operator.LetterOf(data, (index + 7)) == 0)
        {
            Repeat ((((List.IndexOf(hex digits, Operator.LetterOf(data, index)) - 1) * 16) + (List.IndexOf(hex digits, Operator.LetterOf(data, (index + 1))) - 1)))
            {
                byte array = Operator.Join(byte array, Operator.Join(Operator.LetterOf(data, (index + 8)), Operator.LetterOf(data, (index + 9))));
                index += 2;
            }
        }
    }
}

Define Convert to byte array (warp=true)
{
    If (List.Length(raw data) > 0)
    {
        If (Operator.LetterOf(raw data[1], 1) == ":")
        {
            Call Convert I32HEX to byte array;
        }
        Else
        {
            Call Convert hex to byte array;
        }
    }
}

Define Create clones (warp=true)
{
    track number = 1;
    Repeat Until (track number > number of tracks)
    {
        Call Read unsigned long;
        If (Not ((value == 1297379947)))
        {
            List.Add(z_MIDI: Errors, Operator.Join("Track#", Operator.Join(track number, Operator.Join(" MTrk not found at offset: ", (midi index - 4)))));
            Call Error;
        }
        Call Read unsigned long;
        chunk size = value;
        z_MIDI: Active clones += 1;
        Control.CreateCloneOf(_myself_);
        midi index += chunk size;
        track number += 1;
    }
    track number = 0;
}

Define Error (warp=true)
{
    DialogContent = "";
    error.c1 = 0;
    Repeat (List.Length(z_MIDI: Errors))
    {
        error.c1 += 1;
        DialogContent = Operator.Join(DialogContent, Operator.Join(z_MIDI: Errors[error.c1], ";"));
    }
    DialogType = ErrorDialogType;
    Event.Broadcast("ShowDialog");
}

Define Get first time (warp=true)
{
    Call Get next time;
    Repeat Until ((tempo index > List.Length(z_MIDI: Tempo queue)) And (z_MIDI: Note index > List.Length(z_MIDI: Decode note queue)))
    {
        Repeat Until ((tempo index > List.Length(z_MIDI: Tempo queue)) Or (Not (((tempo tracker + z_MIDI: Tempo queue[tempo index]) == z_MIDI: Pulse count))))
        {
            tempo tracker += z_MIDI: Tempo queue[tempo index];
            tempo = z_MIDI: Tempo queue[(tempo index + 1)];
            Music.SetTempo((60 / (tempo * 4)));
            tempo index += 2;
        }
        Repeat Until ((z_MIDI: Note index > List.Length(z_MIDI: Decode note queue)) Or (Not (((note tracker + z_MIDI: Decode note queue[z_MIDI: Note index]) == z_MIDI: Pulse count))))
        {
            time = 0;
            Stop(this script);
        }
        Call Get next time;
    }
}

Define Get next time (warp=true)
{
    old pulse count = z_MIDI: Pulse count;
    z_MIDI: Pulse count = 999999999999999;
    If (Not ((tempo index > List.Length(z_MIDI: Tempo queue))))
    {
        If ((tempo tracker + z_MIDI: Tempo queue[tempo index]) < z_MIDI: Pulse count)
        {
            z_MIDI: Pulse count = (tempo tracker + z_MIDI: Tempo queue[tempo index]);
        }
    }
    If (Not ((z_MIDI: Note index > List.Length(z_MIDI: Decode note queue))))
    {
        If ((note tracker + z_MIDI: Decode note queue[z_MIDI: Note index]) < z_MIDI: Pulse count)
        {
            z_MIDI: Pulse count = (note tracker + z_MIDI: Decode note queue[z_MIDI: Note index]);
        }
    }
    If (z_MIDI: Pulse count == 999999999999999)
    {
        z_MIDI: Pulse count = old pulse count;
    }
    time += (((z_MIDI: Pulse count - old pulse count) * tempo) / pulses per quarter beat);
}

Define Get song index(string song id) (warp=true)
{
    If (Variable.Length(all song data[song id]) > 0)
    {
        midi song = song id;
        Stop(this script);
    }
    midi song = 1;
    Repeat (MIDI: Song Count)
    {
        If (MIDI: Midi songs[midi song] == song id)
        {
            Stop(this script);
        }
        midi song += 1;
    }
    midi song = 0;
}

Define Hide menu lists (warp=true)
{
    List.Hide(MIDI: Midi songs);
    List.Hide(menu options);
    List.Hide(z_MIDI: Warnings);
    List.Hide(z_MIDI: Errors);
    List.Hide(raw data);
}

Define Import MIDI(string Hex) (name(string Name) , reload?(bool Reload?) ) (warp=false)
{
    If (Reload? Or (Not (List.ContainsItem(MIDI: Midi songs, Name))))
    {
        clone type = "decode";
        List.DeleteAll(raw data);
        List.Add(raw data, Hex);
        Control.Wait(0);
        Call Start Progress("Loading MIDI...");
        Call Parse midi hex;
        Call Munch data;
        Call Compress and store(Name);
        If (List.Length(z_MIDI: Errors) > 0)
        {
            Call Error;
        }
        List.DeleteAll(raw data);
        byte array = "";
        If List.ContainsItem(MIDI: Midi songs, Name)
        {
            List.ReplaceItem(all song data, List.IndexOf(MIDI: Midi songs, Name), hex output);
        }
        Else
        {
            List.Add(all song data, hex output);
        }
        Call Update song list;
        Event.Broadcast("HideDialog");
    }
}

Define Initialize base64 (warp=true)
{
    List.DeleteAll(base64 digits);
    base64 = "0123456789abcdefghijklmnopqrstuvwxyz!"£$%^&*()-=[];'#,./_+{}:@~<";
    index = 1;
    Repeat (Variable.Length(base64))
    {
        List.Add(base64 digits, Operator.LetterOf(base64, index));
        index += 1;
    }
}

Define Initialize Maps (warp=true)
{
    List.DeleteAll(z_MIDI: Patch Map);
    i = 1;
    Repeat (List.Length(patch map))
    {
        List.Add(z_MIDI: Patch Map, patch map[i]);
        i += 1;
    }
    List.DeleteAll(z_MIDI: Drum map);
    i = 1;
    Repeat (List.Length(drum map))
    {
        List.Add(z_MIDI: Drum map, drum map[i]);
        i += 1;
    }
}

Define Initialize Menu (no UI) (warp=true)
{
    Call Initialize Maps;
    Stop(other scripts in sprite);
    Event.BroadcastAndWait("z_MIDI: Reset");
    dirty? = "false";
    Call Initialize base64;
    Call Update song list;
}

Define Munch data (warp=false)
{
    Call //("Purge unneeded track data");
    index = 3;
    Call Set Progress Title("Trimming data...");
    Repeat Until (index > List.Length(z_MIDI: Decode note queue))
    {
        List.DeleteItem(z_MIDI: Decode note queue, index);
        index += 5;
        z_MIDI: Progress = (25 + (20 * (index / List.Length(z_MIDI: Decode note queue))));
        Call Set Progress(z_MIDI: Progress);
    }
    Call //("Make timing data relative to reduce storage size");
    index = (List.Length(z_MIDI: Decode note queue) - 4);
    Call Set Progress Title("Building relative timing data...");
    Repeat Until (index == 1)
    {
        List.ReplaceItem(z_MIDI: Decode note queue, index, (z_MIDI: Decode note queue[index] - z_MIDI: Decode note queue[(index - 5)]));
        index += -5;
        z_MIDI: Progress = (45 + (10 * ((List.Length(z_MIDI: Decode note queue) - index) / List.Length(z_MIDI: Decode note queue))));
        Call Set Progress(z_MIDI: Progress);
    }
    index = (List.Length(z_MIDI: Tempo queue) - 1);
    Repeat Until (index == 1)
    {
        List.ReplaceItem(z_MIDI: Tempo queue, index, (z_MIDI: Tempo queue[index] - z_MIDI: Tempo queue[(index - 2)]));
        index += -2;
    }
}

Define Note off (warp=true)
{
    temp = (List.Length(z_MIDI: Decode note queue) - 5);
    Repeat Until (temp < 1)
    {
        If ((track number == z_MIDI: Decode note queue[(temp + 2)]) And (parameter 1 == z_MIDI: Decode note queue[(temp + 4)]))
        {
            List.ReplaceItem(z_MIDI: Decode note queue, (temp + 1), (z_MIDI: Pulse count - z_MIDI: Decode note queue[temp]));
            Stop(this script);
        }
        temp += -6;
    }
}

Define Note on (warp=true)
{
    Call //("Start pulse, pulses duration place holder, track number, instrument, note, volume, ");
    If (Not ((List.Length(z_MIDI: Decode note queue) < 199995)))
    {
        List.Add(z_MIDI: Errors, "The note block list has exceeded 200000 entries");
        Call Error;
    }
    List.Add(z_MIDI: Decode note queue, z_MIDI: Pulse count);
    List.Add(z_MIDI: Decode note queue, 0);
    List.Add(z_MIDI: Decode note queue, track number);
    If (midi channel == 9)
    {
        If ((parameter 1 < 35) Or (parameter 1 > 81))
        {
            List.Add(z_MIDI: Warnings, Operator.Join("Drum map out of range for ", Operator.Join(parameter 1, Operator.Join(" (", Operator.Join((parameter 1 - 34), ")")))));
        }
        Else
        {
            If (z_MIDI: Drum map[(parameter 1 - 34)] == "")
            {
                List.Add(z_MIDI: Errors, Operator.Join("Drum map unassigned for ", Operator.Join(parameter 1, Operator.Join(" (", Operator.Join((parameter 1 - 34), ")")))));
            }
        }
        List.Add(z_MIDI: Decode note queue, (128 + (parameter 1 - 35)));
    }
    Else
    {
        List.Add(z_MIDI: Decode note queue, instrument);
    }
    List.Add(z_MIDI: Decode note queue, parameter 1);
    List.Add(z_MIDI: Decode note queue, parameter 2);
}

Define Parse meta data (warp=true)
{
    If (command == 47)
    {
        Call Read variable length;
        Stop(this script);
    }
    If (command == 81)
    {
        Call Read variable length;
        Call Read bytes(value);
        parameter 1 = value;
        Stop(this script);
    }
    Call Read variable length;
    Call Read bytes(value);
    event type = "undefined";
}

Define Parse midi (warp=true)
{
    Call Read unsigned byte;
    parameter 1 = value;
    If ((event type value == 12) Or (event type value == 13))
    {
        Stop(this script);
    }
    Call Read unsigned byte;
    parameter 2 = value;
}

Define Parse midi hex (warp=false)
{
    Call //("Default tempo is equivalent to 120 bpm (and is the length of one quarter beat)");
    Music.SetTempo(120);
    List.DeleteAll(z_MIDI: Warnings);
    List.DeleteAll(z_MIDI: Errors);
    Call Convert to byte array;
    midi index = 1;
    Call Read header;
    z_MIDI: Active clones = 0;
    Call Create clones;
    z_MIDI: Pulse count = 0;
    List.DeleteAll(z_MIDI: Tempo queue);
    List.DeleteAll(z_MIDI: Decode note queue);
    draw cache = -1;
    Call Set Progress Title("Parsing MIDI file...");
    Repeat Until (z_MIDI: Active clones == 0)
    {
        z_MIDI: Next = 999999999999;
        z_MIDI: Progress = 0;
        Event.BroadcastAndWait("z_MIDI: Process tempo track");
        Event.BroadcastAndWait("z_MIDI: Process music track");
        z_MIDI: Pulse count = z_MIDI: Next;
        z_MIDI: Progress = Operator.Round((25 * (z_MIDI: Progress / z_MIDI: Active clones)));
        Call Set Progress(z_MIDI: Progress);
    }
}

Define Parse system event (warp=true)
{
    Call Read variable length;
    midi index += value;
}

Define Process meta event (warp=true)
{
    If (command == 47)
    {
        z_MIDI: Active clones += -1;
        Control.DeleteThisClone();
    }
    If (command == 81)
    {
        Call Set tempo;
    }
}

Define Process midi control event (warp=true)
{
    If (event type value == 8)
    {
        Call Note off;
    }
    If (event type value == 9)
    {
        If (parameter 2 > 0)
        {
            Call Note on;
        }
        Else
        {
            Call Note off;
        }
    }
    If (event type value == 12)
    {
        Call Set instrument;
    }
}

Define Process system exclusive event (warp=true)
{
}

Define Process track (warp=true)
{
    If (Not ((midi index < (midi start + chunk size))))
    {
        List.Add(z_MIDI: Errors, Operator.Join("Track#", Operator.Join(track number, Operator.Join(" overflowing with midi index ", midi index))));
        Call Error;
    }
    Repeat Until (Not ((z_MIDI: Pulse count == next active pulse count)))
    {
        Call Read midi event;
        If (event type == "midi")
        {
            Call Process midi control event;
        }
        Else
        {
            If (event type == "meta")
            {
                Call Process meta event;
            }
            Else
            {
                If (event type == "system")
                {
                    Call Process system exclusive event;
                }
                Else
                {
                    Call //("This is probably a non-standard meta event or similar");
                }
            }
        }
        Call Read variable length;
        delta time = value;
        next active pulse count += delta time;
    }
    If (next active pulse count < z_MIDI: Next)
    {
        z_MIDI: Next = next active pulse count;
    }
    z_MIDI: Progress += ((midi index - midi start) / chunk size);
}

Define Read base64(string digits) (warp=true)
{
    value = 0;
    Repeat (digits)
    {
        value = ((value * 64) + (List.IndexOf(base64 digits, Operator.LetterOf(hex dump, index)) - 1));
        index += 1;
    }
}

Define Read bytes(string byte count) (warp=true)
{
    value = 0;
    Repeat (byte count)
    {
        value = ((value * 256) + Operator.Round(Operator.Join("0x", Operator.Join(Operator.LetterOf(byte array, ((midi index * 2) - 1)), Operator.LetterOf(byte array, (midi index * 2))))));
        midi index += 1;
    }
}

Define Read header (warp=true)
{
    Call Read unsigned long;
    Call //("Should always be 1297377380");
    Call Read unsigned long;
    Call //("Should always be 6");
    Call Read unsigned short;
    format type = value;
    Call Read unsigned short;
    number of tracks = value;
    Call Read unsigned short;
    time division = value;
    If (Not ((format type == 1)))
    {
        List.Add(z_MIDI: Errors, "Only format type 1 midi files are currently supported");
        Call Error;
    }
    If (time division > 32767)
    {
        List.Add(z_MIDI: Errors, "timecode timing intervals not currently supported");
        Call Error;
    }
    Else
    {
        pulses per quarter beat = time division;
    }
}

Define Read midi event (warp=true)
{
    Call Read unsigned byte;
    If (value == 255)
    {
        event type = "meta";
        Call Read unsigned byte;
        command = value;
        Call Parse meta data;
    }
    Else
    {
        If (value > 239)
        {
            event type = "system";
            Call Parse system event;
        }
        Else
        {
            If (value > 127)
            {
                event type = "midi";
                midi channel = (value % 16);
                event type value = ((value - midi channel) / 16);
                Call Parse midi;
            }
            Else
            {
                Call //("TODO: Ought to check the previous command was a midi one in which case this is referred to as "running status"");
                midi index += -1;
                Call Parse midi;
            }
        }
    }
}

Define Read text(string byte count) (warp=true)
{
    value = "";
    Repeat (byte count)
    {
        value = Operator.Join(value, Operator.LetterOf("alphabet", (Operator.Round(Operator.Join("0x", Operator.Join(Operator.LetterOf(byte array, ((midi index * 2) - 1)), Operator.LetterOf(byte array, (midi index * 2))))) + 1)));
        midi index += 1;
    }
}

Define Read unsigned byte (warp=true)
{
    Call Read bytes(1);
}

Define Read unsigned long (warp=true)
{
    Call Read bytes(4);
}

Define Read unsigned short (warp=true)
{
    Call Read bytes(2);
}

Define Read variable length (warp=true)
{
    value = 0;
    Forever
    {
        temp = Operator.Round(Operator.Join("0x", Operator.Join(Operator.LetterOf(byte array, ((midi index * 2) - 1)), Operator.LetterOf(byte array, (midi index * 2)))));
        midi index += 1;
        value = ((value * 128) + (temp % 128));
        If (temp < 128)
        {
            Stop(this script);
        }
    }
}

Define Read variable length base64 (warp=true)
{
    variable value = 0;
    multiplier = 1;
    Forever
    {
        Call Read base64(2);
        If (value < 2048)
        {
            variable value += (value * multiplier);
            value = variable value;
            Stop(this script);
        }
        Else
        {
            variable value += ((value % 2048) * multiplier);
            multiplier = (multiplier * 2048);
        }
    }
}

Define Read variable length string (warp=true)
{
    Call Read variable length base64;
    string = "";
    Repeat (value)
    {
        string = Operator.Join(string, Operator.LetterOf(hex dump, index));
        index += 1;
    }
    value = string;
}

Define Set instrument (warp=true)
{
    If (z_MIDI: Patch Map[(parameter 1 + 1)] == "")
    {
        List.Add(z_MIDI: Errors, Operator.Join("Patch map unassigned for ", (parameter 1 + 1)));
    }
    instrument = parameter 1;
}

Define Set Progress(string %) (warp=true)
{
    DialogProgress = (% / 100);
}

Define Set Progress Title(string Title) (warp=true)
{
    If (DialogType == ProgressDialogType)
    {
        DialogContent = Operator.Join(Operator.Join(MIDI: Song, ": "), Title);
    }
}

Define Set tempo (warp=true)
{
    List.Add(z_MIDI: Tempo queue, z_MIDI: Pulse count);
    List.Add(z_MIDI: Tempo queue, (parameter 1 / 1000000));
}

Define Show menu lists (warp=true)
{
    List.Show(MIDI: Midi songs);
    List.Show(menu options);
}

Define Start Progress(string Title) (warp=false)
{
    DialogType = ProgressDialogType;
    DialogContent = Title;
    DialogProgress = 0;
    Event.BroadcastAndWait("ShowDialog");
}

Define Transfer (warp=true)
{
    hex dump = all song data[midi song];
    List.DeleteAll(z_MIDI: Decode note queue);
    List.DeleteAll(z_MIDI: Tempo queue);
    index = 1;
    Call Read base64(2);
    Call Read variable length string;
    Call //("Read dictionary");
    List.DeleteAll(dictionary);
    Call Read variable length base64;
    dictionary size = value;
    Repeat (dictionary size)
    {
        Repeat (2)
        {
            Call Read variable length base64;
            List.Add(dictionary, value);
        }
        Repeat (3)
        {
            Call Read base64(2);
            List.Add(dictionary, value);
        }
    }
    Call Read variable length base64;
    pulses per quarter beat = value;
    Call //("Read tempo data");
    Call Read variable length base64;
    Repeat ((value / 2))
    {
        Call Read variable length base64;
        List.Add(z_MIDI: Tempo queue, value);
        Call Read variable length base64;
        List.Add(z_MIDI: Tempo queue, (value / 1000000));
    }
    Call //("Read note data");
    Repeat Until (index > Variable.Length(hex dump))
    {
        Call Read variable length base64;
        i = ((value * 5) - 4);
        Repeat (5)
        {
            List.Add(z_MIDI: Decode note queue, dictionary[i]);
            i += 1;
        }
    }
    List.DeleteAll(dictionary);
    hex dump = "";
}

Define Update song list (warp=true)
{
    List.DeleteAll(MIDI: Midi songs);
    MIDI: Song Count = List.Length(all song data);
    i = 1;
    Repeat (MIDI: Song Count)
    {
        hex dump = all song data[i];
        index = 1;
        Call Read variable length base64;
        Call Read variable length string;
        List.Add(MIDI: Midi songs, value);
        i += 1;
    }
}


//----- Costumes ------------------------------------------------------------------------------------------------------

Blank.svg
